{"map":"{\"version\":3,\"sources\":[\"/Users/suvarna/Desktop/WepoPythonTutorial/src/App.js\",\"/Users/suvarna/Desktop/WepoPythonTutorial/src/Input.js\",\"/Users/suvarna/Desktop/WepoPythonTutorial/src/Conditionals.js\",\"/Users/suvarna/Desktop/WepoPythonTutorial/src/Lists.js\",\"/Users/suvarna/Desktop/WepoPythonTutorial/src/Loops.js\",\"/Users/suvarna/Desktop/WepoPythonTutorial/src/Functions.js\",\"/Users/suvarna/Desktop/WepoPythonTutorial/src/Debugging.js\",\"/Users/suvarna/Desktop/WepoPythonTutorial/src/Practice.js\",\"/Users/suvarna/Desktop/WepoPythonTutorial/src/Problem3.js\",\"/Users/suvarna/Desktop/WepoPythonTutorial/src/Problem5.js\",\"/Users/suvarna/Desktop/WepoPythonTutorial/src/Problem7.js\",\"/Users/suvarna/Desktop/WepoPythonTutorial/src/Problem9.js\",\"/Users/suvarna/Desktop/WepoPythonTutorial/src/index.js\"],\"names\":[\"App\",\"React\",\"createElement\",\"style\",\"textAlign\",\"src\",\"width\",\"height\",\"alt\",\"marginLeft\",\"Typography\",\"align\",\"Grid\",\"item\",\"xs\",\"Button\",\"href\",\"variant\",\"color\",\"label\",\"size\",\"Input\",\"container\",\"spacing\",\"sm\",\"Card\",\"backgroundColor\",\"marginRight\",\"marginTop\",\"raised\",\"CardContent\",\"marginBottom\",\"title\",\"sandbox\",\"Conditionals\",\"gutterBottom\",\"Lists\",\"Loops\",\"Functions\",\"Debugging\",\"Practice\",\"Problem3\",\"Problem5\",\"Problem7\",\"router\",\"createBrowserRouter\",\"path\",\"element\",\"Problem9\",\"ReactDOM\",\"createRoot\",\"document\",\"getElementById\",\"render\",\"RouterProvider\"],\"mappings\":\"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\",\"sourcesContent\":[\"import React from 'react';\\nimport { Grid, Button, Typography} from '@mui/material';\\n\\nfunction App() {\\n  return (\\n  <div>\\n    <br></br>\\n    <br></br>\\n    <main/>\\n        <h1 style={{textAlign: \\\"center\\\"}}>Let's build our own Penn State Creamery!!</h1>\\n        <br></br>\\n        <br></br>\\n        <h2 style={{textAlign: \\\"center\\\"}}>WEPO 2023 Python Tutorial</h2>\\n        <br></br>\\n        <br></br>\\n        <div>\\n        <img src=\\\"cup1.png\\\" width={250} height={250} alt=\\\"\\\" style={{marginLeft:\\\"300px\\\"}}/>\\n        <img src=\\\"creamery.png\\\" width={250} height={250} alt=\\\"\\\" style={{marginLeft:\\\"100px\\\"}}/>\\n        <img src=\\\"cup2.png\\\" width={250} height={250} alt=\\\"\\\" style={{marginLeft:\\\"100px\\\"}}/>\\n        </div>\\n  <br></br>\\n  <br></br>\\n  <Typography align='left'>\\n<Grid item xs={3}>\\n      <Button href=\\\"/Input\\\" variant=\\\"contained\\\" color=\\\"inherit\\\" label=\\\"Input/Output\\\" size=\\\"large\\\" style={{marginLeft:\\\"650px\\\"}}>\\n        Lesson 1: Input and Output\\n        </Button>\\n      </Grid>\\n      <br></br>\\n      <br></br>\\n      <Grid item xs ={3}>\\n          <Button href=\\\"/Conditionals\\\" variant=\\\"contained\\\" color=\\\"inherit\\\" label=\\\"Conditionals\\\" size=\\\"large\\\" style={{marginLeft:\\\"650px\\\"}}>\\n            Lesson 2: Conditionals\\n            </Button>\\n      </Grid>\\n      <br></br>\\n      <br></br>\\n      <Grid item xs ={3}>\\n          <Button href=\\\"/Lists\\\" variant=\\\"contained\\\" color=\\\"inherit\\\" label=\\\"Lists\\\" size=\\\"large\\\" style={{marginLeft:\\\"650px\\\"}}>\\n          Lesson 3: Lists\\n            </Button>\\n      </Grid>\\n      <br></br>\\n      <br></br>\\n      <Grid item xs ={3}>\\n          <Button href=\\\"/Loops\\\" variant=\\\"contained\\\" color=\\\"inherit\\\" label=\\\"Loops\\\" size=\\\"large\\\" style={{marginLeft:\\\"650px\\\"}}>\\n            Lesson 4: Loops\\n          </Button>\\n          </Grid>\\n          <br></br>\\n      <br></br>\\n      <Grid item xs ={3}>\\n      <Button href=\\\"/Functions\\\"  variant=\\\"contained\\\" color=\\\"inherit\\\" label=\\\"Functions\\\" size=\\\"large\\\" style={{marginLeft:\\\"650px\\\"}}>\\n        Lesson 5: Functions\\n        </Button>\\n      </Grid>\\n      <br></br>\\n      <br></br>\\n      <Grid item xs ={3}>\\n      <Button href=\\\"/Debugging\\\" variant=\\\"contained\\\" color=\\\"inherit\\\" label=\\\"Debugging\\\" size=\\\"large\\\" style={{marginLeft:\\\"650px\\\"}}>\\n        Lesson 6: Debugging and practice!\\n        </Button>\\n      </Grid>\\n      </Typography>\\n      <br></br>\\n      <br></br>\\n    </div>\\n  );\\n}\\n\\nexport default App;\\n\",\"import React from 'react'\\nimport { Typography, Grid, CardContent} from '@mui/material'\\nimport { Card } from '@mui/material'\\n\\nfunction Input(){\\n    return(\\n        <div>\\n            <Typography color=\\\"success\\\">\\n                <h1 align=\\\"center\\\" color='success'>Variables, Data Types, Comments, Input and Output</h1>\\n             </Typography>\\n            <Grid container spacing={2}>\\n                <Grid item sm ={4}>\\n\\n            <Card style={{backgroundColor:\\\"yellowgreen\\\", width:\\\"400px\\\", height:\\\"600px\\\", marginRight:\\\"80px\\\", marginLeft:\\\"50px\\\", marginTop:\\\"30px\\\"}} raised=\\\"true\\\">\\n            <CardContent>\\n                <b>Variables</b>\\n            </CardContent>\\n            <CardContent>\\n                Variables are a way to store data. You can assign something to a variable when you want to use it in your code somewhere. \\n            </CardContent>\\n            <CardContent>\\n                For example, if you see the example given below in the sandbox, \\\"favorite_car_brand\\\" is actually a variable which is storing the data point that the user is entering.\\n            </CardContent>\\n            <CardContent>\\n                Variables is a simple concept but there are certain rules that you need to keep in mind while declaring these: \\n            </CardContent>\\n            <CardContent>\\n            1. A variable name must start with a letter or the underscore character\\n            </CardContent>\\n            <CardContent>\\n            2. A variable name cannot start with a number\\n            </CardContent>\\n            <CardContent>\\n            3. A variable name can only contain alpha-numeric characters and underscores (A-z, 0-9, and _ )\\n            </CardContent>\\n            <CardContent>\\n            4. Variable names are case-sensitive (age, Age and AGE are three different variables)\\n            </CardContent>\\n            </Card>\\n            <br></br>\\n            <br></br>\\n            <iframe align=\\\"center\\\" style={{marginLeft:\\\"300px\\\", marginBottom:\\\"15px\\\"}} title='Learning about input and output in Python' src=\\\"https://trinket.io/embed/python/024ee9fc0a\\\"  width=\\\"600\\\" height=\\\"400\\\" sandbox=\\\"allow-forms allow-modals allow-presentation allow-same-origin allow-scripts\\\"/>\\n            \\n            </Grid>\\n            <Grid item sm={4}>\\n            <Card style={{backgroundColor:\\\"yellowgreen\\\", width:\\\"480px\\\", height:\\\"600px\\\", marginRight:\\\"60px\\\", marginTop:\\\"30px\\\"}} raised=\\\"true\\\">\\n                    <CardContent>\\n                        <Typography>\\n                            <b>Data Types</b>\\n                        </Typography>\\n                    </CardContent>\\n                    <CardContent>\\n                        The data stored in variables can be of different types, for example, if it is number it is either an int or float, if it is something in quotes then it is a string. More data types are given below - \\n                    </CardContent>\\n                    <Typography>\\n                        <CardContent>\\n                            1. Integer - Non decimal numerical values are categorized as \\\"int\\\". For example, 1, 2, 3.. \\n                        </CardContent>\\n                        <CardContent>\\n                            2. Float - These are the numeric decimal values. For example, 2.3, 7.8, 4.0\\n                        </CardContent>\\n                        <CardContent>\\n                            3. String - Anything having \\\" \\\" around it can be categorized as a string value. For example, \\\"name\\\", \\\"apple\\\", \\\"4\\\"\\n                        </CardContent>\\n                        <CardContent>\\n                            4. Boolean - This can have only two values - true of false. For example, if an object has a property that is present, the value of the property will be <b>true</b>, otherwise it will be <b>false</b>\\n                        </CardContent>\\n                        <CardContent>\\n                            In the sandbox below try doing \\\"print(type(\\\"5\\\"))\\\". Type is a function that helps us determine the \\n                            type of variable. \\n                        </CardContent>\\n                    </Typography>\\n                </Card>\\n                <Card style={{marginLeft:\\\"400px\\\", width:\\\"400px\\\", height:\\\"200px\\\", marginTop:\\\"100px\\\",  backgroundColor:\\\"yellowgreen\\\"}} raised=\\\"true\\\">\\n                <CardContent>\\n                    <b>Try yourself!</b>\\n                </CardContent>\\n                <CardContent>\\n                    Try creating an input yourself now! Ask the user to enter their favorite ice cream flavor. \\n                </CardContent>\\n                <CardContent>\\n                    Do this my modifying the sandbox and writing your own code! \\n                </CardContent>\\n            </Card>\\n            </Grid>\\n            <Grid item sm={4}>\\n            <Card style={{width: \\\"400px\\\", height:\\\"600px\\\", marginLeft:\\\"5px\\\", marginTop:\\\"30px\\\", backgroundColor:\\\"yellowgreen\\\"}} raised=\\\"true\\\">\\n                    <CardContent>\\n                        <b>Input/Output</b>\\n                    </CardContent>\\n                    <CardContent>\\n                        <b>A way to get an input from the user in Python is to use the input() function.</b> The input function is supposed to \\n                        include a string within the brackets of the function (as shown in the example in the sandbox). This string will be \\n                        displayed to the user when the code is run and tells the user what input the computer is looking for. \\n                    </CardContent>\\n                    <CardContent>\\n                        As you can see in the example, we assign the input function to a variable \\n                    </CardContent>\\n                    <CardContent>\\n                        <b>The way to get an output from the code is using print statements. </b> The print function takes in a variable that \\n                        is supposed to be printed and shown to the user, which in other words means giving an output. \\n                    </CardContent>\\n                    <CardContent>\\n                        <b>Comments</b>\\n                    </CardContent>\\n                    <CardContent>\\n                        This is a way to write a desciption of your code that won't affect the execution of the program.  A line is considered as a comment in Python if it starts with a '#' symbol. \\n                    </CardContent>\\n                </Card>\\n\\n                \\n                <br></br>\\n                <br></br>\\n                <br></br>\\n                </Grid>\\n            </Grid>\\n        </div>\\n)\\n}\\nexport default Input\",\"import React from 'react';\\nimport { CardContent, Grid } from '@mui/material';\\nimport { Typography } from '@mui/material';\\nimport {Card} from '@mui/material';\\n\\nfunction Conditionals(){\\n    return(\\n        <div>\\n            <br></br>\\n            <br></br>\\n            <br></br>\\n            <Typography color=\\\"Primary\\\">\\n                <h1 align=\\\"center\\\">Conditionals</h1>\\n                </Typography>\\n            <Grid container spacing={2}>\\n                <Grid item sm={4}>\\n                    <Card style={{marginLeft:\\\"100px\\\", width:\\\"450px\\\", height:\\\"600px\\\", backgroundColor:\\\"yellowgreen\\\"}}>\\n                <Typography align=\\\"left\\\" gutterBottom>\\n                   <CardContent>\\n                    <b>Why are conditionals used </b>\\n                   </CardContent>\\n                   <CardContent>\\n                   Conditionals are used to show different outcomes of different decisions. It has three parts - \\n                   </CardContent>\\n                   <CardContent>\\n                    1. If Statement\\n                   </CardContent>\\n                   <CardContent>\\n                    2. Elif Statement \\n                   </CardContent>\\n                   <CardContent>\\n                    3. Else statement\\n                   </CardContent>\\n                   <CardContent>\\n                   The example given in the sandbox helps us determine the range in which the numerical value was entered by the user. \\n                   </CardContent>\\n                   <CardContent>\\n                   Having an if statement and else statement is the primary \\n                   structure of a conditional with just two outcomes <b>but an elif statement is used when we want to categorize something in more than two outcomes. </b>\\n                   </CardContent>\\n                </Typography>\\n                </Card>\\n                </Grid>\\n                <br></br>\\n                <br></br>\\n                <Grid item sm={4}>\\n                <Card style={{marginLeft:\\\"75px\\\", width:\\\"450px\\\", height:\\\"600px\\\", backgroundColor:\\\"yellowgreen\\\"}}>\\n                <Typography align=\\\"left\\\" gutterBottom>\\n                    <CardContent>\\n                        <b>Sandbox example of conditionals</b>\\n                    </CardContent>\\n                <CardContent>\\n                In the example given in the sandbox below, we are separating the input entered by the user into four categories - \\n                </CardContent>\\n                <CardContent>\\n                1. Less than 10\\n                </CardContent>\\n                <CardContent>\\n                2. Greater than 10 but less than 15\\n                </CardContent>\\n                <CardContent>\\n                3.  Greater than 15 but less than 20\\n                </CardContent>\\n                <CardContent>\\n                4.  Greater than 20\\n                </CardContent>\\n                <CardContent>\\n                Having these different categories produces different results which can be seen by running the code below. The statement that amounts to true is the one that will be executed, and the other statements will be ignored or skipped.\\n                </CardContent>\\n                </Typography>\\n                </Card>\\n                </Grid>\\n                <Card style={{marginTop:\\\"16px\\\", width:\\\"450px\\\", height:\\\"610px\\\", marginLeft:\\\"60px\\\", backgroundColor:\\\"yellowgreen\\\"}}>\\n                        <CardContent>\\n                            <b>Formatting/Syntax for Conditionals</b>\\n                        </CardContent>\\n                        <CardContent>\\n                            1. Identation is important! The lines of code that you want to execute if an if or elif statement is true, \\n                            should be indented under the declaration of an if statement as shown in the example piece of code. \\n                        </CardContent>\\n                        <CardContent>\\n                            2. Only the lines of code under the statement that evalutates to true will be executed, the rest of the code will be skipped. \\n                        </CardContent>\\n                        <CardContent>\\n                            <b>Logical Operators: These are the operators that return either false or true as an output. </b>\\n                        </CardContent>\\n                        <CardContent>\\n                            1. <b>==</b>  : This is an operator to check whether two data points are equal to eachother or not. \\\"print(9==5)\\\" will give us an output of false since 9 and 5 are not equal. However, a \\\"print(5==5)\\\" will give a true result. \\n                        </CardContent>\\n                        <CardContent>\\n                            2. <b>And</b> : This is an operator which returns true if both the conditions are true. Similar to what AND actually means! For example, in the sandox example, the code within each else if or if statement will only be \\n                            executed if the \\\"and\\\" operators return true. \\n                        </CardContent>\\n                        <CardContent>\\n                            3. <b>Or</b> : Similar to the word \\\"or\\\" this returns true if either of the conditions are true. \\n                        </CardContent>\\n                    </Card>\\n\\n                 </Grid>\\n                 <Grid container spacing={2}>\\n                    <Grid item sm={7} align=\\\"center\\\">\\n                        <br></br>\\n                        <br></br>\\n                <iframe style={{marginLeft:\\\"150px\\\", marginBottom:\\\"50px\\\"}}  align=\\\"center\\\" title='Learning about input and output in Python' src=\\\"https://trinket.io/embed/python/cbfde46f46\\\"  width=\\\"800\\\" height=\\\"500\\\" sandbox=\\\"allow-forms allow-modals allow-popups allow-presentation allow-same-origin allow-scripts\\\"/>\\n                </Grid>\\n                <Grid item sm={5}>\\n                <Card width=\\\"600px\\\" height=\\\"600px\\\" raised=\\\"true\\\" style={{ width:\\\"400px\\\", height:\\\"400px\\\", marginRight:\\\"50px\\\", marginTop:\\\"100px\\\", marginLeft:\\\"100px\\\", backgroundColor:\\\"yellowgreen\\\"}} >\\n                <CardContent><b>Try yourself!</b></CardContent>\\n                <CardContent>\\n                 Now that you have seen an example, it is time for you to apply this knowledge to our creamery!\\n                </CardContent>\\n                <CardContent>\\n                Print the cost of different types of ice creams according to the ice cream flavor that the user enters.\\n                Modify the sandbox on the side with your code and see if you can get the correct output!\\n                </CardContent>\\n                </Card>\\n                </Grid>\\n                </Grid>\\n        </div>\\n)\\n}\\nexport default Conditionals\",\"import React from 'react'\\r\\nimport { Typography, Grid, CardContent} from '@mui/material'\\r\\nimport { Card } from '@mui/material'\\r\\n\\r\\nfunction Lists(){\\r\\n    return(\\r\\n        <div>\\r\\n            <Typography color=\\\"success\\\">\\r\\n                <h1 align=\\\"center\\\" color='success'>Lesson 3: Let's learn about Lists!</h1>\\r\\n             </Typography>\\r\\n            <Grid container spacing={2}>\\r\\n                <Grid item sm ={4}>\\r\\n                <Card style={{marginLeft:\\\"100px\\\", width:\\\"700px\\\", height:\\\"325px\\\", backgroundColor:\\\"yellowgreen\\\"}} raised=\\\"true\\\">\\r\\n                <CardContent>\\r\\n                    <Typography>\\r\\n                        <b>What are Lists and why are they used?</b>\\r\\n                    </Typography>\\r\\n                </CardContent>\\r\\n                    <Typography>\\r\\n                        <CardContent>\\r\\n                        A list is a <b>mutable</b> (can be changed) data structure in Python. A list consists of an ordered <b>sequence of elements</b>, each of these elements inside the list is called an <b>item</b>. All python lists are framed by an outerset of <b>square brackets [ ]</b>. Any data types can be added to a single list.\\r\\n                        </CardContent>\\r\\n                        <CardContent>\\r\\n                            Lists can become useful when working with <b>related values and data sets</b>. Lists are an easy way to keep data organized and perform the same operations on multiple values at once. These operations can be performed using different <b>list functions</b>. Examples of these functions are given on the next card.  \\r\\n                        </CardContent>\\r\\n                    </Typography>\\r\\n            </Card>\\r\\n\\r\\n            <br></br>\\r\\n            <br></br>\\r\\n\\r\\n            <iframe align=\\\"center\\\" style={{marginLeft:\\\"100px\\\"}} title='Learning about Lists in Python' src= \\\"https://trinket.io/embed/python/b6cfff3ab5?toggleCode=true\\\"  width=\\\"700\\\" height=\\\"525\\\" sandbox=\\\"allow-forms allow-modals allow-popups allow-presentation allow-same-origin allow-scripts\\\"/>\\r\\n\\r\\n            </Grid>\\r\\n            <Grid item sm={4}>\\r\\n            </Grid>\\r\\n            <Grid item sm={4}>\\r\\n                <Card style={{backgroundColor:\\\"yellowgreen\\\", width:\\\"400px\\\", height:\\\"700px\\\", marginRight:\\\"100px\\\"}} raised=\\\"true\\\">\\r\\n                    <CardContent>\\r\\n                        <Typography>\\r\\n                            <b>Important Python List Functions</b>\\r\\n                        </Typography>\\r\\n                    </CardContent>\\r\\n                    <Typography>\\r\\n                        <CardContent>\\r\\n                            <b>1. len()</b> - Returns the number of items in the List.\\r\\n                        </CardContent>\\r\\n                        <CardContent>\\r\\n                            <b>2. append()</b> - Used for appending and adding elements to the end of the List.\\r\\n                        </CardContent>\\r\\n                        <CardContent>\\r\\n                            <b>3. remove()</b> - Removes a given object from the List. \\r\\n                        </CardContent>\\r\\n                        <CardContent>\\r\\n                            <b>4. sort()</b> - Sort a List in ascending, descending, or user-defined order.\\r\\n                        </CardContent>\\r\\n                        <CardContent>\\r\\n                            <b>5. count()</b> - Returns the number of times an object appears in a List.\\r\\n                        </CardContent>\\r\\n                        <CardContent>\\r\\n                            <b>6. min() / max()</b> - Calculates the minimum or maximum of all the elements of the List\\r\\n                        </CardContent>\\r\\n                        <CardContent>\\r\\n                            <b>7. sort()</b> - Sort a List in ascending, descending, or user-defined order.\\r\\n                        </CardContent>\\r\\n                        <CardContent>\\r\\n                             Run the code in the sandbox and to see how ice cream flavors can be added to a list that acts as the shopping cart. \\r\\n                        </CardContent>\\r\\n                    </Typography>\\r\\n                </Card>\\r\\n                <br></br>\\r\\n                <br></br>\\r\\n                <br></br>\\r\\n                <Card style={{backgroundColor:\\\"yellowgreen\\\", width:\\\"400px\\\", height:\\\"100px\\\", marginRight:\\\"100px\\\"}} raised=\\\"true\\\">\\r\\n                    <Typography style={{color:\\\"black\\\"}}>\\r\\n                    <CardContent>\\r\\n                        <b>Your turn to modify the sandbox!</b> - Now try using the <b>costs list</b> to add up the total cost of the shopping cart.\\r\\n                    </CardContent>\\r\\n                    </Typography>\\r\\n                </Card>\\r\\n                </Grid>\\r\\n            </Grid>\\r\\n        </div>\\r\\n)\\r\\n}\\r\\nexport default Lists\",\"import React from 'react'\\r\\nimport { Typography, Grid, CardContent} from '@mui/material'\\r\\nimport { Card } from '@mui/material'\\r\\n\\r\\nfunction Loops(){\\r\\n    return(\\r\\n        <div>\\r\\n            <Typography color=\\\"success\\\">\\r\\n                <h1 align=\\\"center\\\" color='success'>Lesson 4: Let's learn about Loops!</h1>\\r\\n             </Typography>\\r\\n            <Grid container spacing={2}>\\r\\n                <Grid item sm ={4}>\\r\\n                <Card style={{marginLeft:\\\"100px\\\", width:\\\"700px\\\", height:\\\"275px\\\", backgroundColor:\\\"yellowgreen\\\"}} raised=\\\"true\\\">\\r\\n                <CardContent>\\r\\n                    <Typography>\\r\\n                        <b>What are Loops and why are they used?</b>\\r\\n                    </Typography>\\r\\n                </CardContent>\\r\\n                    <Typography>\\r\\n                        <CardContent>\\r\\n                            A python loop is a sequence of instructions that is <b>continually repeated</b> until a certain condition is reached. There are 2 main types of loops in Python: <b>For Loops</b> and <b>While Loops</b>. These are explained more in depth on the next card.\\r\\n                        </CardContent>\\r\\n                        <CardContent>\\r\\n                            Loops are important because they allow a programmer to execute blocks of code repeatedly without having to write out the same line of code multiple times. An advantage of using loops is that it <b>increases efficiency</b> and allows code to become <b>more simplified</b>.\\r\\n                        </CardContent>\\r\\n                    </Typography>\\r\\n            </Card>\\r\\n\\r\\n            <br></br>\\r\\n            <br></br>\\r\\n\\r\\n            <iframe align=\\\"center\\\" style={{marginLeft:\\\"100px\\\"}} title='Learning about Loops in Python' src= \\\"https://trinket.io/embed/python/15078468c5?toggleCode=true\\\"  width=\\\"700\\\" height=\\\"500\\\" sandbox=\\\"allow-forms allow-modals allow-popups allow-presentation allow-same-origin allow-scripts\\\"/>\\r\\n\\r\\n            </Grid>\\r\\n            <Grid item sm={4}>\\r\\n            </Grid>\\r\\n            <Grid item sm={4}>\\r\\n                <Card style={{backgroundColor:\\\"yellowgreen\\\", width:\\\"400px\\\", height:\\\"600px\\\", marginRight:\\\"50px\\\"}} raised=\\\"true\\\">\\r\\n                    <CardContent>\\r\\n                        <Typography>\\r\\n                            <b>Different Types of Loops</b>\\r\\n                        </Typography>\\r\\n                    </CardContent>\\r\\n                    <Typography>\\r\\n                        <CardContent>\\r\\n                            <b>For Loops</b> - A loop with a control statement that executes code repeatedly for a particular number of iterations. In this control flow statement, the keyword used is <b>\\\"for\\\"</b>. The for loop is used when the <b>number of iterations is already known</b>.\\r\\n                        </CardContent>\\r\\n                        <CardContent>\\r\\n                            <b>While Loops</b> - A loop that executes a single statement or a group of statements for the given true condition. The keyword used to represent this loop is <b>\\\"while\\\"</b>. The while loop is used when the <b>number of iterations is unknown</b>.\\r\\n                        </CardContent>\\r\\n                        <CardContent>\\r\\n                            <b>How do I know which to use? </b> - <b>For loops</b> are used when we know the number of iterations we want the loop to complete. <b>While loops</b> are used when we want the loop to continue executing until a specific condition is proved wrong.\\r\\n                        </CardContent>\\r\\n                        <CardContent>\\r\\n                             Run the code in the sandbox to see how a while loop can be used to print icecream flavors in a list. \\r\\n                        </CardContent>\\r\\n                    </Typography>\\r\\n                </Card>\\r\\n                <br></br>\\r\\n                <br></br>\\r\\n                <br></br>\\r\\n                <Card style={{backgroundColor:\\\"yellowgreen\\\", width:\\\"400px\\\", height:\\\"110px\\\", marginRight:\\\"100px\\\"}} raised=\\\"true\\\">\\r\\n                    <Typography style={{color:\\\"black\\\"}}>\\r\\n                    <CardContent>\\r\\n                        <b>Your turn to modify the sandbox!</b> - Print out all the ice cream flavors in the list using a <b>for loop</b>. The while loop was already done for you.\\r\\n                    </CardContent>\\r\\n                    </Typography>\\r\\n                </Card>\\r\\n                </Grid>\\r\\n            </Grid>\\r\\n        </div>\\r\\n)\\r\\n}\\r\\nexport default Loops\",\"import React from 'react'\\r\\nimport { Typography, Grid, CardContent} from '@mui/material'\\r\\nimport { Card } from '@mui/material'\\r\\n\\r\\nfunction Functions(){\\r\\n    return(\\r\\n        <div>\\r\\n            <Typography color=\\\"success\\\">\\r\\n                <h1 align=\\\"center\\\" color='success'>Lesson 5: Let's learn about Functions!</h1>\\r\\n             </Typography>\\r\\n            <Grid container spacing={2}>\\r\\n                <Grid item sm={4}>\\r\\n                    <Card style={{marginLeft:\\\"100px\\\", width:\\\"600px\\\", height:\\\"500px\\\", backgroundColor:\\\"yellowgreen\\\"}}>\\r\\n                    <CardContent>\\r\\n                   <b>What are Functions?</b><b></b>\\r\\n                   </CardContent>\\r\\n                   <CardContent>\\r\\n                   When coding, it is common to see a repetition of certain parts of code throughout the program. <i>In general, functions take an inputed value and then output a value, and are meant to perform specified tasks.</i>\\r\\n                   </CardContent>\\r\\n                   <CardContent>\\r\\n                   <b>What is Function Invocation?</b><b></b>\\r\\n                   </CardContent>\\r\\n                   <CardContent>\\r\\n                   - Functions are invoked by stating the name of the function followed by parentheses which contain the inputs to the function. \\r\\n                   </CardContent>\\r\\n                   <CardContent>\\r\\n                   - For functions with multiple inputs, separate them with commas.\\r\\n                   </CardContent>\\r\\n                   <CardContent>\\r\\n                        <i> For example, a function, called “IceCreamCost” that has one input, ice cream flavor, and one output, the cost, would be invoked like this:\\r\\n                            IceCreamCost(flavor).</i> \\r\\n                    </CardContent>\\r\\n                </Card>\\r\\n                </Grid>\\r\\n                <br></br>\\r\\n                <br></br>\\r\\n                <Grid item sm={4}>\\r\\n                <Card style={{marginLeft:\\\"290px\\\", width:\\\"590px\\\", height:\\\"500px\\\", backgroundColor:\\\"yellowgreen\\\"}}>\\r\\n                <CardContent>\\r\\n                    <b>Defining vs Calling Function</b>\\r\\n                    </CardContent>\\r\\n                    <CardContent>\\r\\n                        - Defining a function is done by using the keyword, def following by the function name with the inputs in parenthesis inside.\\r\\n                    </CardContent>\\r\\n                    <CardContent>\\r\\n                        - Calling a function is done from a separate function and it involves using the function name with the inputs in parenthesis inside. \\r\\n                    </CardContent>\\r\\n                    <CardContent>\\r\\n                        <b>Arguments vs Parameters</b>\\r\\n                    </CardContent>\\r\\n                    <CardContent>\\r\\n                        - An argument is the term for a value that is passed into a function via a function invocation. \\r\\n                    </CardContent>\\r\\n                    <CardContent>\\r\\n                        - A parameter is one of the variables in the actual function definition.\\r\\n                    </CardContent>\\r\\n                    <CardContent>\\r\\n                        <b>Return vs Print</b>\\r\\n                    </CardContent>\\r\\n                    <CardContent>\\r\\n                        - Return is a keyword that stops the function from continuing and then “returns” the value back to where it was called from. \\r\\n                    </CardContent>\\r\\n                    <CardContent>\\r\\n                        - Print is a function the prints out the value for humans to see. It will not have to be printed within the function it was called from. \\r\\n                    </CardContent>\\r\\n                </Card>\\r\\n                </Grid>\\r\\n                 </Grid>\\r\\n                <Grid container spacing={2}>\\r\\n                    <Grid item sm={7} align=\\\"center\\\">\\r\\n                        <br></br>\\r\\n                        <br></br>\\r\\n                <iframe style={{marginRight:\\\"80px\\\"}} title='Learning about functions in' src=\\\"https://trinket.io/embed/python3/2f76acfe3d\\\"  width=\\\"750\\\" height=\\\"400\\\" sandbox=\\\"allow-forms allow-modals allow-popups allow-presentation allow-same-origin allow-scripts\\\"/>\\r\\n                <br></br>\\r\\n                <br></br>\\r\\n                </Grid>\\r\\n                <Grid item sm={5}>\\r\\n                    <Card style={{marginTop:\\\"100px\\\", width:\\\"400px\\\", height:\\\"300px\\\", backgroundColor:\\\"yellowgreen\\\"}}>\\r\\n                <CardContent>\\r\\n                <b>Your turn to try and modify the sandbox!</b> Try and alter the different variables and function and see the variety of different outputs!\\r\\n                </CardContent>\\r\\n  \\r\\n                <CardContent>\\r\\n                <b> Practice! </b> Now try altering the code by creating a new function that subtracts an amount of ice-cream cones from the store's total supply\\r\\n                </CardContent>\\r\\n                <CardContent>\\r\\n                    <b> Note. This can be done many different ways. Try to experiment and create different variables!</b>\\r\\n                </CardContent>\\r\\n                    </Card>\\r\\n                </Grid>\\r\\n                </Grid>\\r\\n        </div>\\r\\n)\\r\\n}\\r\\nexport default Functions \",\"import React from 'react'\\r\\nimport { Typography, Grid, Button, CardContent} from '@mui/material'\\r\\nimport { Card } from '@mui/material'\\r\\n\\r\\nfunction Debugging(){\\r\\n    return(\\r\\n        <div>\\r\\n            <Typography color=\\\"success\\\">\\r\\n                <h1 align=\\\"center\\\" color='success'>Lesson 6: Debugging and Practice Questions!</h1>\\r\\n             </Typography>\\r\\n            <Grid container spacing={2}>\\r\\n            <Grid item sm={4}>\\r\\n                    <Card style={{width: \\\"800px\\\", height:\\\"200px\\\", marginLeft:\\\"350px\\\", backgroundColor:\\\"yellowgreen\\\"}} raised=\\\"true\\\">\\r\\n                    <Typography align=\\\"left\\\"  gutterBottom>\\r\\n                        <CardContent>\\r\\n                            <b>What is debugging?</b><b></b>\\r\\n                        </CardContent>\\r\\n                        <CardContent>\\r\\n                            Debugging is the process of going through code in order to fix errors and bugs. It is an unavoidable part of programming; as a result, it is import to learn techniques and rules to effectively debug your code!\\r\\n                        </CardContent>\\r\\n                        <CardContent>\\r\\n                            <b>Click on the Practice Problems button to practice this!</b>\\r\\n                        </CardContent>\\r\\n                        </Typography>\\r\\n                    </Card>\\r\\n                    </Grid>\\r\\n                    <Grid item sm = {2}>\\r\\n                        <Button align = \\\"center\\\" href=\\\"/Practice\\\" variant=\\\"contained\\\" color=\\\"inherit\\\" label=\\\"Debugging\\\" size=\\\"extralarge\\\" style={{marginLeft:\\\"750px\\\"}}>\\r\\n                            Practice Problems!\\r\\n                            </Button>\\r\\n                    </Grid>\\r\\n                    <Grid item sm = {2}>\\r\\n                        <Button  align = \\\"center\\\" href=\\\"/App\\\" variant=\\\"contained\\\" color=\\\"inherit\\\" label=\\\"Debugging\\\" size=\\\"extralarge\\\" style={{marginLeft:\\\"-650px\\\"}}>\\r\\n                            Homepage\\r\\n                            </Button>\\r\\n                    </Grid>\\r\\n                    </Grid>\\r\\n                    <br></br>\\r\\n                    <br></br>\\r\\n                <Grid item sm = {4}>\\r\\n                    <Card style={{marginLeft:\\\"350px\\\", width:\\\"800px\\\", height:\\\"575px\\\", backgroundColor:\\\"yellowgreen\\\"}} raised = \\\"true\\\">\\r\\n                    <Typography align=\\\"left\\\" gutterBottom>\\r\\n                    <CardContent>\\r\\n                            <b>What are the steps to debugging?</b><b></b>\\r\\n                        </CardContent>\\r\\n                        <CardContent>\\r\\n                            Step 1: Identify what the error is. Three of the most common errors include <b>syntax errors</b> (an error in the structure of the code like a missing parenthesis),\\r\\n                            <b>semantic errors</b> (when the code still runs but returns the wrong output), and <b>runtime errors</b> (an error that occurs when the code is running like when indexing of a list is out of bounds)\\r\\n                        </CardContent>\\r\\n                        <CardContent>\\r\\n                            Step 2: Find out where the error is. Print statements are useful in figuring out the outputs at different areas of the code, and to help narrow down where the issue is.\\r\\n                        </CardContent>\\r\\n                        <CardContent>\\r\\n                            Step 3: Look at the error and make a plan on how to fix it.\\r\\n                        </CardContent>\\r\\n                        <CardContent>\\r\\n                            Step 4: Fix the code.\\r\\n                        </CardContent>\\r\\n                        <CardContent>\\r\\n                            Step 5: Edit the surrounding code to make sure it wasn't affected by the change of code.\\r\\n                        </CardContent>\\r\\n                        <CardContent>\\r\\n                            Step 6: Check to see if the code runs properly.\\r\\n                        </CardContent>\\r\\n                        </Typography>\\r\\n                    </Card>\\r\\n                </Grid>\\r\\n                <br></br>\\r\\n                <br></br>\\r\\n        </div>\\r\\n\\r\\n)\\r\\n}\\r\\nexport default Debugging\",\"import React from 'react'\\r\\nimport { Typography, Grid, Button, CardContent} from '@mui/material'\\r\\nimport { Card } from '@mui/material'\\r\\n\\r\\nfunction Practice(){\\r\\n    return(\\r\\n        <div>\\r\\n            <Typography color=\\\"success\\\">\\r\\n                <h1 align=\\\"center\\\" color='success'>Edit the Sandbox to Correct the Error!</h1>\\r\\n             </Typography>\\r\\n             <Grid item sm = {2}>\\r\\n             <Button href=\\\"/Debugging\\\" variant=\\\"contained\\\" color=\\\"inherit\\\" label=\\\"Debugging\\\" size=\\\"large\\\" style={{marginLeft:\\\"100px\\\"}}>\\r\\n                    Back\\r\\n                    </Button>\\r\\n                <Button href=\\\"/Problem3\\\" variant=\\\"contained\\\" color=\\\"inherit\\\" label=\\\"Debugging\\\" size=\\\"large\\\" style={{marginLeft:\\\"450px\\\"}}>\\r\\n                    Continue\\r\\n                    </Button>\\r\\n                <Button href=\\\"/App\\\" variant=\\\"contained\\\" color=\\\"inherit\\\" label=\\\"Debugging\\\" size=\\\"large\\\" style={{marginLeft:\\\"450px\\\"}}>\\r\\n                    Homepage\\r\\n                    </Button>\\r\\n                </Grid>\\r\\n             <Grid container spacing={2}>\\r\\n                    <Grid item sm={7} align=\\\"center\\\">\\r\\n                        <br></br>\\r\\n                        <br></br>\\r\\n                <iframe align=\\\"center\\\" style={{marginLeft:\\\"40px\\\"}} title='Learning about functions in' src=\\\"https://trinket.io/embed/python3/960679b04a\\\"  width=\\\"600\\\" height=\\\"400\\\" sandbox=\\\"allow-forms allow-modals allow-popups allow-presentation allow-same-origin allow-scripts\\\"/>\\r\\n                </Grid>\\r\\n                <Grid item sm={5}>\\r\\n                    <Card style={{marginTop:\\\"75px\\\", width:\\\"300px\\\", height:\\\"150px\\\", backgroundColor:\\\"silver\\\"}}>\\r\\n                    <CardContent>\\r\\n                        <b>Question 1</b>\\r\\n                    </CardContent>\\r\\n                    <CardContent>\\r\\n                        Print every ice-cream flavor.\\r\\n                    </CardContent>\\r\\n                </Card>\\r\\n                </Grid>\\r\\n                </Grid>\\r\\n                <br></br>\\r\\n                <br></br>\\r\\n                <Grid container spacing={2}>\\r\\n                    <Grid item sm={7} align=\\\"center\\\">\\r\\n                        <br></br>\\r\\n                        <br></br>\\r\\n                <iframe align=\\\"center\\\" style={{marginLeft:\\\"40px\\\"}} title='Learning about functions in' src=\\\"https://trinket.io/embed/python3/6771db41f6\\\"   width=\\\"600\\\" height=\\\"400\\\" sandbox=\\\"allow-forms allow-modals allow-popups allow-presentation allow-same-origin allow-scripts\\\"/>\\r\\n                </Grid>\\r\\n                <Grid item sm={5}>\\r\\n                    <Card style={{marginTop:\\\"75px\\\", width:\\\"300px\\\", height:\\\"150px\\\", backgroundColor:\\\"silver\\\"}}>\\r\\n                    <CardContent>\\r\\n                    <b>Question 2</b>\\r\\n                </CardContent>\\r\\n                <CardContent>\\r\\n                    Print out the four ice-cream flavors and the costs of each.\\r\\n                </CardContent>\\r\\n                </Card>\\r\\n                </Grid>\\r\\n                </Grid>\\r\\n                <br></br>\\r\\n                <br></br>\\r\\n\\r\\n        </div>\\r\\n\\r\\n)\\r\\n}\\r\\nexport default Practice\",\"import React from 'react'\\r\\nimport { Typography, Grid, Button, CardContent} from '@mui/material'\\r\\nimport { Card } from '@mui/material'\\r\\n\\r\\nfunction Problem3(){\\r\\n    return(\\r\\n        <div>\\r\\n            <Typography color=\\\"success\\\">\\r\\n                <h1 align=\\\"center\\\" color='success'>Edit the Sandbox to Correct the Error!</h1>\\r\\n             </Typography>\\r\\n             <Grid item sm = {2}>\\r\\n             <Button href=\\\"/Practice\\\" variant=\\\"contained\\\" color=\\\"inherit\\\" label=\\\"Debugging\\\" size=\\\"large\\\" style={{marginLeft:\\\"100px\\\"}}>\\r\\n                    Back\\r\\n                    </Button>\\r\\n                <Button href=\\\"/Problem5\\\" variant=\\\"contained\\\" color=\\\"inherit\\\" label=\\\"Debugging\\\" size=\\\"large\\\" style={{marginLeft:\\\"450px\\\"}}>\\r\\n                    Continue\\r\\n                </Button>\\r\\n                <Button href=\\\"/App\\\" variant=\\\"contained\\\" color=\\\"inherit\\\" label=\\\"Debugging\\\" size=\\\"large\\\" style={{marginLeft:\\\"450px\\\"}}>\\r\\n                    Homepage\\r\\n                    </Button>\\r\\n                </Grid>\\r\\n             <Grid container spacing={2}>\\r\\n                    <Grid item sm={7} align=\\\"center\\\">\\r\\n                        <br></br>\\r\\n                        <br></br>\\r\\n                <iframe align=\\\"center\\\" style={{marginLeft:\\\"40px\\\"}} title='Learning about functions in' src=\\\"https://trinket.io/embed/python3/2d8507c154\\\"  width=\\\"600\\\" height=\\\"400\\\" sandbox=\\\"allow-forms allow-modals allow-popups allow-presentation allow-same-origin allow-scripts\\\"/>\\r\\n                </Grid>\\r\\n                <Grid item sm={5}>\\r\\n                    <Card style={{marginTop:\\\"75px\\\", width:\\\"300px\\\", height:\\\"150px\\\", backgroundColor:\\\"silver\\\"}}>\\r\\n                <CardContent>\\r\\n                <b>Question 3</b>\\r\\n                </CardContent>\\r\\n                <CardContent>\\r\\n                        Print the product of num1 and num2.\\r\\n                    </CardContent>\\r\\n                </Card>\\r\\n                </Grid>\\r\\n                </Grid>\\r\\n                <br></br>\\r\\n                <br></br>\\r\\n                <Grid container spacing={2}>\\r\\n                    <Grid item sm={7} align=\\\"center\\\">\\r\\n                        <br></br>\\r\\n                        <br></br>\\r\\n                <iframe align=\\\"center\\\" style={{marginLeft:\\\"40px\\\"}} title='Learning about functions in' src=\\\"https://trinket.io/embed/python3/9045f0188d\\\"   width=\\\"600\\\" height=\\\"400\\\" sandbox=\\\"allow-forms allow-modals allow-popups allow-presentation allow-same-origin allow-scripts\\\"/>\\r\\n                </Grid>\\r\\n                <Grid item sm={5}>\\r\\n                    <Card style={{marginTop:\\\"75px\\\", width:\\\"300px\\\", height:\\\"150px\\\", backgroundColor:\\\"silver\\\"}}>\\r\\n                    <CardContent>\\r\\n                    <b>Question 4</b>\\r\\n                    </CardContent>\\r\\n                    <CardContent>\\r\\n                    Print the flavor Vanilla from the list.\\r\\n                    </CardContent>\\r\\n                </Card>\\r\\n                </Grid>\\r\\n                </Grid>\\r\\n                <br></br>\\r\\n                <br></br>\\r\\n\\r\\n        </div>\\r\\n\\r\\n)\\r\\n}\\r\\nexport default Problem3\",\"import React from 'react'\\r\\nimport { Typography, Grid, Button, CardContent} from '@mui/material'\\r\\nimport { Card } from '@mui/material'\\r\\n\\r\\nfunction Problem5(){\\r\\n    return(\\r\\n        <div>\\r\\n        <Typography color=\\\"success\\\">\\r\\n            <h1 align=\\\"center\\\" color='success'>Edit the Sandbox to Correct the Error!</h1>\\r\\n         </Typography>\\r\\n         <Grid item sm = {2}>\\r\\n         <Button href=\\\"/Problem3\\\" variant=\\\"contained\\\" color=\\\"inherit\\\" label=\\\"Debugging\\\" size=\\\"large\\\" style={{marginLeft:\\\"100px\\\"}}>\\r\\n                    Back\\r\\n                    </Button>\\r\\n                <Button href=\\\"/Problem7\\\" variant=\\\"contained\\\" color=\\\"inherit\\\" label=\\\"Debugging\\\" size=\\\"large\\\" style={{marginLeft:\\\"450px\\\"}}>\\r\\n                    Continue\\r\\n                    </Button>\\r\\n\\r\\n                    <Button href=\\\"/App\\\" variant=\\\"contained\\\" color=\\\"inherit\\\" label=\\\"Debugging\\\" size=\\\"large\\\" style={{marginLeft:\\\"450px\\\"}}>\\r\\n                    Homepage\\r\\n                    </Button>\\r\\n                </Grid>\\r\\n         <Grid container spacing={2}>\\r\\n                <Grid item sm={7} align=\\\"center\\\">\\r\\n                    <br></br>\\r\\n                    <br></br>\\r\\n            <iframe align=\\\"center\\\" style={{marginLeft:\\\"40px\\\"}} title='Learning about functions in' src=\\\"https://trinket.io/embed/python3/2238659c3e\\\"   width=\\\"600\\\" height=\\\"400\\\" sandbox=\\\"allow-forms allow-modals allow-popups allow-presentation allow-same-origin allow-scripts\\\"/>\\r\\n            </Grid>\\r\\n            <Grid item sm={5}>\\r\\n                <Card style={{marginTop:\\\"75px\\\", width:\\\"300px\\\", height:\\\"150px\\\", backgroundColor:\\\"silver\\\"}}>\\r\\n                <CardContent>\\r\\n                        <b>Question 5</b>\\r\\n                    </CardContent>\\r\\n                    <CardContent>\\r\\n                        Print the multiples of 2 up until 5.\\r\\n                    </CardContent>\\r\\n            </Card>\\r\\n            </Grid>\\r\\n            </Grid>\\r\\n            <br></br>\\r\\n            <br></br>\\r\\n            <Grid container spacing={2}>\\r\\n                <Grid item sm={7} align=\\\"center\\\">\\r\\n                    <br></br>\\r\\n                    <br></br>\\r\\n            <iframe align=\\\"center\\\" style={{marginLeft:\\\"40px\\\"}} title='Learning about functions in' src=\\\"https://trinket.io/embed/python3/a8fd3ed873\\\"   width=\\\"600\\\" height=\\\"400\\\" sandbox=\\\"allow-forms allow-modals allow-popups allow-presentation allow-same-origin allow-scripts\\\"/>\\r\\n            </Grid>\\r\\n            <Grid item sm={5}>\\r\\n                <Card style={{marginTop:\\\"75px\\\", width:\\\"300px\\\", height:\\\"150px\\\", backgroundColor:\\\"silver\\\"}}>\\r\\n                <CardContent>\\r\\n                    <b>Question 6</b>\\r\\n                </CardContent>\\r\\n                <CardContent>\\r\\n                    Print the amount of cones left in a stock after a cone is bought.\\r\\n                </CardContent>\\r\\n            </Card>\\r\\n            </Grid>\\r\\n            </Grid>\\r\\n            <br></br>\\r\\n            <br></br>\\r\\n    </div>\\r\\n\\r\\n)\\r\\n}\\r\\nexport default Problem5\",\"import React from 'react'\\r\\nimport { Typography, Grid, Button, CardContent} from '@mui/material'\\r\\nimport { Card } from '@mui/material'\\r\\n\\r\\nfunction Problem7(){\\r\\n    return(\\r\\n        <div>\\r\\n        <Typography color=\\\"success\\\">\\r\\n            <h1 align=\\\"center\\\" color='success'>Edit the Sandbox to Correct the Error!</h1>\\r\\n         </Typography>\\r\\n         <Grid item sm = {2}>\\r\\n         <Button href=\\\"/Problem5\\\" variant=\\\"contained\\\" color=\\\"inherit\\\" label=\\\"Debugging\\\" size=\\\"large\\\" style={{marginLeft:\\\"100px\\\"}}>\\r\\n                    Back\\r\\n                    </Button>\\r\\n                <Button href=\\\"/Problem9\\\" variant=\\\"contained\\\" color=\\\"inherit\\\" label=\\\"Debugging\\\" size=\\\"large\\\" style={{marginLeft:\\\"450px\\\"}}>\\r\\n                    Continue\\r\\n                    </Button>\\r\\n                <Button href=\\\"/App\\\" variant=\\\"contained\\\" color=\\\"inherit\\\" label=\\\"Debugging\\\" size=\\\"large\\\" style={{marginLeft:\\\"450px\\\"}}>\\r\\n                    Homepage\\r\\n                    </Button>\\r\\n                </Grid>\\r\\n         <Grid container spacing={2}>\\r\\n                <Grid item sm={7} align=\\\"center\\\">\\r\\n                    <br></br>\\r\\n                    <br></br>\\r\\n            <iframe align=\\\"center\\\" style={{marginLeft:\\\"40px\\\"}} title='Learning about functions in' src=\\\"https://trinket.io/embed/python3/9576c6b4e3\\\"   width=\\\"600\\\" height=\\\"400\\\" sandbox=\\\"allow-forms allow-modals allow-popups allow-presentation allow-same-origin allow-scripts\\\"/>\\r\\n            </Grid>\\r\\n            <Grid item sm={5}>\\r\\n                <Card style={{marginTop:\\\"75px\\\", width:\\\"300px\\\", height:\\\"150px\\\", backgroundColor:\\\"silver\\\"}}>\\r\\n                <CardContent>\\r\\n                        <b>Question 7</b>\\r\\n                    </CardContent>\\r\\n                    <CardContent>\\r\\n                        Print the average of x and y.\\r\\n                    </CardContent>\\r\\n            </Card>\\r\\n            </Grid>\\r\\n            </Grid>\\r\\n            <br></br>\\r\\n            <br></br>\\r\\n            <Grid container spacing={2}>\\r\\n                <Grid item sm={7} align=\\\"center\\\">\\r\\n                    <br></br>\\r\\n                    <br></br>\\r\\n            <iframe align=\\\"center\\\" style={{marginLeft:\\\"40px\\\"}} title='Learning about functions in' src=\\\"https://trinket.io/embed/python3/4fe4821b62\\\"   width=\\\"600\\\" height=\\\"400\\\" sandbox=\\\"allow-forms allow-modals allow-popups allow-presentation allow-same-origin allow-scripts\\\"/>\\r\\n            </Grid>\\r\\n            <Grid item sm={5}>\\r\\n                <Card style={{marginTop:\\\"75px\\\", width:\\\"300px\\\", height:\\\"150px\\\", backgroundColor:\\\"silver\\\"}}>\\r\\n                <CardContent>\\r\\n                    <b>Question 8</b>\\r\\n                </CardContent>\\r\\n                <CardContent>\\r\\n                    Print the numbers from count to 0.\\r\\n                </CardContent>\\r\\n            </Card>\\r\\n            </Grid>\\r\\n            </Grid>\\r\\n            <br></br>\\r\\n            <br></br>\\r\\n\\r\\n    </div>\\r\\n\\r\\n)\\r\\n}\\r\\nexport default Problem7\",\"import React from 'react'\\r\\nimport { Typography, Grid, Button, CardContent} from '@mui/material'\\r\\nimport { Card } from '@mui/material'\\r\\n\\r\\nfunction Problem7(){\\r\\n    return(\\r\\n        <div>\\r\\n        <Typography color=\\\"success\\\">\\r\\n            <h1 align=\\\"center\\\" color='success'>Edit the Sandbox to Correct the Error!</h1>\\r\\n         </Typography>\\r\\n         <Grid item sm = {2}>\\r\\n         <Button href=\\\"/Problem7\\\" variant=\\\"contained\\\" color=\\\"inherit\\\" label=\\\"Debugging\\\" size=\\\"large\\\" style={{marginLeft:\\\"100px\\\"}}>\\r\\n                    Back\\r\\n                </Button>\\r\\n                <Button href=\\\"/App\\\" variant=\\\"contained\\\" color=\\\"inherit\\\" label=\\\"Debugging\\\" size=\\\"large\\\" style={{marginLeft:\\\"450px\\\"}}>\\r\\n                    Homepage\\r\\n                    </Button>\\r\\n                </Grid>\\r\\n         <Grid container spacing={2}>\\r\\n                <Grid item sm={7} align=\\\"center\\\">\\r\\n                    <br></br>\\r\\n                    <br></br>\\r\\n            <iframe align=\\\"center\\\" style={{marginLeft:\\\"40px\\\"}} title='Learning about functions in' src=\\\"https://trinket.io/embed/python3/baa6659fa3\\\"   width=\\\"600\\\" height=\\\"400\\\" sandbox=\\\"allow-forms allow-modals allow-popups allow-presentation allow-same-origin allow-scripts\\\"/>\\r\\n            </Grid>\\r\\n            <Grid item sm={5}>\\r\\n                <Card style={{marginTop:\\\"75px\\\", width:\\\"300px\\\", height:\\\"150px\\\", backgroundColor:\\\"silver\\\"}}>\\r\\n                <CardContent>\\r\\n                        <b>Question 9</b>\\r\\n                    </CardContent>\\r\\n                    <CardContent>\\r\\n                        Print the product of all real numbers till 10.\\r\\n                    </CardContent>\\r\\n            </Card>\\r\\n            </Grid>\\r\\n            </Grid>\\r\\n            <br></br>\\r\\n            <br></br>\\r\\n            <Grid container spacing={2}>\\r\\n                <Grid item sm={7} align=\\\"center\\\">\\r\\n                    <br></br>\\r\\n                    <br></br>\\r\\n            <iframe align=\\\"center\\\" style={{marginLeft:\\\"40px\\\"}} title='Learning about functions in' src=\\\"https://trinket.io/embed/python3/a6a3f860d3\\\"   width=\\\"600\\\" height=\\\"400\\\" sandbox=\\\"allow-forms allow-modals allow-popups allow-presentation allow-same-origin allow-scripts\\\"/>\\r\\n            </Grid>\\r\\n            <Grid item sm={5}>\\r\\n                <Card style={{marginTop:\\\"75px\\\", width:\\\"300px\\\", height:\\\"150px\\\", backgroundColor:\\\"silver\\\"}}>\\r\\n                <CardContent>\\r\\n                    <b>Question 10 (Bonus!)</b>\\r\\n                </CardContent>\\r\\n                <CardContent>\\r\\n                    Return true if the sum of num three times is 0.3.\\r\\n                </CardContent>\\r\\n            </Card>\\r\\n            </Grid>\\r\\n            </Grid>\\r\\n            <br></br>\\r\\n            <br></br>\\r\\n\\r\\n    </div>\\r\\n\\r\\n)\\r\\n}\\r\\nexport default Problem7\",\"import React from 'react';\\r\\nimport ReactDOM from 'react-dom';\\r\\nimport './index.css';\\r\\nimport App from './App';\\r\\nimport Input from './Input';\\r\\nimport { createBrowserRouter, RouterProvider } from 'react-router-dom';\\r\\nimport Conditionals from './Conditionals';\\r\\nimport Lists from './Lists';\\r\\nimport Loops from './Loops';\\r\\nimport Functions from './Functions';\\r\\nimport Debugging from './Debugging';\\r\\nimport Practice from './Practice';\\r\\nimport Problem3 from './Problem3';\\r\\nimport Problem5 from './Problem5';\\r\\nimport Problem7 from './Problem7';\\r\\nimport Problem9 from './Problem9';\\r\\n\\r\\n\\r\\nconst router = createBrowserRouter([\\r\\n  {\\r\\n  path: \\\"/\\\",\\r\\n  element: <App/>\\r\\n  },\\r\\n  {\\r\\n    path: \\\"/Input\\\",\\r\\n    element: <Input/>\\r\\n  },\\r\\n  {\\r\\n    path: \\\"/Conditionals\\\",\\r\\n    element: <Conditionals/>\\r\\n  },\\r\\n  {\\r\\n    path: \\\"/Lists\\\",\\r\\n    element: <Lists/>\\r\\n  },\\r\\n  {\\r\\n    path: \\\"/Loops\\\",\\r\\n    element: <Loops/>\\r\\n  },\\r\\n  {\\r\\n    path: \\\"/Functions\\\",\\r\\n    element: <Functions/>\\r\\n  },\\r\\n  {\\r\\n    path: \\\"Debugging\\\",\\r\\n    element: <Debugging/>\\r\\n  },\\r\\n  {\\r\\n    path: \\\"Practice\\\",\\r\\n    element: <Practice/>\\r\\n  },\\r\\n  {\\r\\n    path: \\\"Problem3\\\",\\r\\n    element: <Problem3/>\\r\\n  },\\r\\n  {\\r\\n    path: \\\"Problem5\\\",\\r\\n    element: <Problem5/>\\r\\n  },\\r\\n  {\\r\\n    path: \\\"Problem7\\\",\\r\\n    element: <Problem7/>\\r\\n  },\\r\\n  {\\r\\n    path: \\\"Problem9\\\",\\r\\n    element: <Problem9/>\\r\\n  },\\r\\n  {\\r\\n    path: \\\"App\\\",\\r\\n    element: <App/>\\r\\n  }\\r\\n]);\\r\\nconst root = ReactDOM.createRoot(document.getElementById('root'));\\r\\nroot.render(\\r\\n  <RouterProvider router={router} />\\r\\n);\\r\\n\\r\\n\\r\\n// If you want to start measuring performance in your app, pass a function\\r\\n// to log results (for example: reportWebVitals(console.log))\\r\\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\\r\\n\"]}","code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[0],{56:function(e,t,a){e.exports=a(72)},64:function(e,t,a){},72:function(e,t,a){\"use strict\";a.r(t);var n=a(1),l=a.n(n),r=a(51),i=a.n(r),o=(a(64),a(92)),c=a(91),s=a(88);var m=function(){return l.a.createElement(\"div\",null,l.a.createElement(\"br\",null),l.a.createElement(\"br\",null),l.a.createElement(\"main\",null),l.a.createElement(\"h1\",{style:{textAlign:\"center\"}},\"Let's build our own Penn State Creamery!!\"),l.a.createElement(\"br\",null),l.a.createElement(\"br\",null),l.a.createElement(\"h2\",{style:{textAlign:\"center\"}},\"WEPO 2023 Python Tutorial\"),l.a.createElement(\"br\",null),l.a.createElement(\"br\",null),l.a.createElement(\"div\",null,l.a.createElement(\"img\",{src:\"cup1.png\",width:250,height:250,alt:\"\",style:{marginLeft:\"300px\"}}),l.a.createElement(\"img\",{src:\"creamery.png\",width:250,height:250,alt:\"\",style:{marginLeft:\"100px\"}}),l.a.createElement(\"img\",{src:\"cup2.png\",width:250,height:250,alt:\"\",style:{marginLeft:\"100px\"}})),l.a.createElement(\"br\",null),l.a.createElement(\"br\",null),l.a.createElement(o.a,{align:\"left\"},l.a.createElement(c.a,{item:!0,xs:3},l.a.createElement(s.a,{href:\"/Input\",variant:\"contained\",color:\"inherit\",label:\"Input/Output\",size:\"large\",style:{marginLeft:\"650px\"}},\"Lesson 1: Input and Output\")),l.a.createElement(\"br\",null),l.a.createElement(\"br\",null),l.a.createElement(c.a,{item:!0,xs:3},l.a.createElement(s.a,{href:\"/Conditionals\",variant:\"contained\",color:\"inherit\",label:\"Conditionals\",size:\"large\",style:{marginLeft:\"650px\"}},\"Lesson 2: Conditionals\")),l.a.createElement(\"br\",null),l.a.createElement(\"br\",null),l.a.createElement(c.a,{item:!0,xs:3},l.a.createElement(s.a,{href:\"/Lists\",variant:\"contained\",color:\"inherit\",label:\"Lists\",size:\"large\",style:{marginLeft:\"650px\"}},\"Lesson 3: Lists\")),l.a.createElement(\"br\",null),l.a.createElement(\"br\",null),l.a.createElement(c.a,{item:!0,xs:3},l.a.createElement(s.a,{href:\"/Loops\",variant:\"contained\",color:\"inherit\",label:\"Loops\",size:\"large\",style:{marginLeft:\"650px\"}},\"Lesson 4: Loops\")),l.a.createElement(\"br\",null),l.a.createElement(\"br\",null),l.a.createElement(c.a,{item:!0,xs:3},l.a.createElement(s.a,{href:\"/Functions\",variant:\"contained\",color:\"inherit\",label:\"Functions\",size:\"large\",style:{marginLeft:\"650px\"}},\"Lesson 5: Functions\")),l.a.createElement(\"br\",null),l.a.createElement(\"br\",null),l.a.createElement(c.a,{item:!0,xs:3},l.a.createElement(s.a,{href:\"/Debugging\",variant:\"contained\",color:\"inherit\",label:\"Debugging\",size:\"large\",style:{marginLeft:\"650px\"}},\"Lesson 6: Debugging and practice!\"))),l.a.createElement(\"br\",null),l.a.createElement(\"br\",null))},u=a(93),h=a(89);var p=function(){return l.a.createElement(\"div\",null,l.a.createElement(o.a,{color:\"success\"},l.a.createElement(\"h1\",{align:\"center\",color:\"success\"},\"Variables, Data Types, Comments, Input and Output\")),l.a.createElement(c.a,{container:!0,spacing:2},l.a.createElement(c.a,{item:!0,sm:4},l.a.createElement(h.a,{style:{backgroundColor:\"yellowgreen\",width:\"400px\",height:\"600px\",marginRight:\"80px\",marginLeft:\"50px\",marginTop:\"30px\"},raised:\"true\"},l.a.createElement(u.a,null,l.a.createElement(\"b\",null,\"Variables\")),l.a.createElement(u.a,null,\"Variables are a way to store data. You can assign something to a variable when you want to use it in your code somewhere.\"),l.a.createElement(u.a,null,'For example, if you see the example given below in the sandbox, \"favorite_car_brand\" is actually a variable which is storing the data point that the user is entering.'),l.a.createElement(u.a,null,\"Variables is a simple concept but there are certain rules that you need to keep in mind while declaring these:\"),l.a.createElement(u.a,null,\"1. A variable name must start with a letter or the underscore character\"),l.a.createElement(u.a,null,\"2. A variable name cannot start with a number\"),l.a.createElement(u.a,null,\"3. A variable name can only contain alpha-numeric characters and underscores (A-z, 0-9, and _ )\"),l.a.createElement(u.a,null,\"4. Variable names are case-sensitive (age, Age and AGE are three different variables)\")),l.a.createElement(\"br\",null),l.a.createElement(\"br\",null),l.a.createElement(\"iframe\",{align:\"center\",style:{marginLeft:\"300px\",marginBottom:\"15px\"},title:\"Learning about input and output in Python\",src:\"https://trinket.io/embed/python/024ee9fc0a\",width:\"600\",height:\"400\",sandbox:\"allow-forms allow-modals allow-presentation allow-same-origin allow-scripts\"})),l.a.createElement(c.a,{item:!0,sm:4},l.a.createElement(h.a,{style:{backgroundColor:\"yellowgreen\",width:\"480px\",height:\"600px\",marginRight:\"60px\",marginTop:\"30px\"},raised:\"true\"},l.a.createElement(u.a,null,l.a.createElement(o.a,null,l.a.createElement(\"b\",null,\"Data Types\"))),l.a.createElement(u.a,null,\"The data stored in variables can be of different types, for example, if it is number it is either an int or float, if it is something in quotes then it is a string. More data types are given below -\"),l.a.createElement(o.a,null,l.a.createElement(u.a,null,'1. Integer - Non decimal numerical values are categorized as \"int\". For example, 1, 2, 3..'),l.a.createElement(u.a,null,\"2. Float - These are the numeric decimal values. For example, 2.3, 7.8, 4.0\"),l.a.createElement(u.a,null,'3. String - Anything having \" \" around it can be categorized as a string value. For example, \"name\", \"apple\", \"4\"'),l.a.createElement(u.a,null,\"4. Boolean - This can have only two values - true of false. For example, if an object has a property that is present, the value of the property will be \",l.a.createElement(\"b\",null,\"true\"),\", otherwise it will be \",l.a.createElement(\"b\",null,\"false\")),l.a.createElement(u.a,null,'In the sandbox below try doing \"print(type(\"5\"))\". Type is a function that helps us determine the type of variable.'))),l.a.createElement(h.a,{style:{marginLeft:\"400px\",width:\"400px\",height:\"200px\",marginTop:\"100px\",backgroundColor:\"yellowgreen\"},raised:\"true\"},l.a.createElement(u.a,null,l.a.createElement(\"b\",null,\"Try yourself!\")),l.a.createElement(u.a,null,\"Try creating an input yourself now! Ask the user to enter their favorite ice cream flavor.\"),l.a.createElement(u.a,null,\"Do this my modifying the sandbox and writing your own code!\"))),l.a.createElement(c.a,{item:!0,sm:4},l.a.createElement(h.a,{style:{width:\"400px\",height:\"600px\",marginLeft:\"5px\",marginTop:\"30px\",backgroundColor:\"yellowgreen\"},raised:\"true\"},l.a.createElement(u.a,null,l.a.createElement(\"b\",null,\"Input/Output\")),l.a.createElement(u.a,null,l.a.createElement(\"b\",null,\"A way to get an input from the user in Python is to use the input() function.\"),\" The input function is supposed to include a string within the brackets of the function (as shown in the example in the sandbox). This string will be displayed to the user when the code is run and tells the user what input the computer is looking for.\"),l.a.createElement(u.a,null,\"As you can see in the example, we assign the input function to a variable\"),l.a.createElement(u.a,null,l.a.createElement(\"b\",null,\"The way to get an output from the code is using print statements. \"),\" The print function takes in a variable that is supposed to be printed and shown to the user, which in other words means giving an output.\"),l.a.createElement(u.a,null,l.a.createElement(\"b\",null,\"Comments\")),l.a.createElement(u.a,null,\"This is a way to write a desciption of your code that won't affect the execution of the program.  A line is considered as a comment in Python if it starts with a '#' symbol.\")),l.a.createElement(\"br\",null),l.a.createElement(\"br\",null),l.a.createElement(\"br\",null))))},E=a(52),g=a(0);var d=function(){return l.a.createElement(\"div\",null,l.a.createElement(\"br\",null),l.a.createElement(\"br\",null),l.a.createElement(\"br\",null),l.a.createElement(o.a,{color:\"Primary\"},l.a.createElement(\"h1\",{align:\"center\"},\"Conditionals\")),l.a.createElement(c.a,{container:!0,spacing:2},l.a.createElement(c.a,{item:!0,sm:4},l.a.createElement(h.a,{style:{marginLeft:\"100px\",width:\"450px\",height:\"600px\",backgroundColor:\"yellowgreen\"}},l.a.createElement(o.a,{align:\"left\",gutterBottom:!0},l.a.createElement(u.a,null,l.a.createElement(\"b\",null,\"Why are conditionals used \")),l.a.createElement(u.a,null,\"Conditionals are used to show different outcomes of different decisions. It has three parts -\"),l.a.createElement(u.a,null,\"1. If Statement\"),l.a.createElement(u.a,null,\"2. Elif Statement\"),l.a.createElement(u.a,null,\"3. Else statement\"),l.a.createElement(u.a,null,\"The example given in the sandbox helps us determine the range in which the numerical value was entered by the user.\"),l.a.createElement(u.a,null,\"Having an if statement and else statement is the primary structure of a conditional with just two outcomes \",l.a.createElement(\"b\",null,\"but an elif statement is used when we want to categorize something in more than two outcomes. \"))))),l.a.createElement(\"br\",null),l.a.createElement(\"br\",null),l.a.createElement(c.a,{item:!0,sm:4},l.a.createElement(h.a,{style:{marginLeft:\"75px\",width:\"450px\",height:\"600px\",backgroundColor:\"yellowgreen\"}},l.a.createElement(o.a,{align:\"left\",gutterBottom:!0},l.a.createElement(u.a,null,l.a.createElement(\"b\",null,\"Sandbox example of conditionals\")),l.a.createElement(u.a,null,\"In the example given in the sandbox below, we are separating the input entered by the user into four categories -\"),l.a.createElement(u.a,null,\"1. Less than 10\"),l.a.createElement(u.a,null,\"2. Greater than 10 but less than 15\"),l.a.createElement(u.a,null,\"3.  Greater than 15 but less than 20\"),l.a.createElement(u.a,null,\"4.  Greater than 20\"),l.a.createElement(u.a,null,\"Having these different categories produces different results which can be seen by running the code below. The statement that amounts to true is the one that will be executed, and the other statements will be ignored or skipped.\")))),l.a.createElement(h.a,{style:{marginTop:\"16px\",width:\"450px\",height:\"610px\",marginLeft:\"60px\",backgroundColor:\"yellowgreen\"}},l.a.createElement(u.a,null,l.a.createElement(\"b\",null,\"Formatting/Syntax for Conditionals\")),l.a.createElement(u.a,null,\"1. Identation is important! The lines of code that you want to execute if an if or elif statement is true, should be indented under the declaration of an if statement as shown in the example piece of code.\"),l.a.createElement(u.a,null,\"2. Only the lines of code under the statement that evalutates to true will be executed, the rest of the code will be skipped.\"),l.a.createElement(u.a,null,l.a.createElement(\"b\",null,\"Logical Operators: These are the operators that return either false or true as an output. \")),l.a.createElement(u.a,null,\"1. \",l.a.createElement(\"b\",null,\"==\"),'  : This is an operator to check whether two data points are equal to eachother or not. \"print(9==5)\" will give us an output of false since 9 and 5 are not equal. However, a \"print(5==5)\" will give a true result.'),l.a.createElement(u.a,null,\"2. \",l.a.createElement(\"b\",null,\"And\"),' : This is an operator which returns true if both the conditions are true. Similar to what AND actually means! For example, in the sandox example, the code within each else if or if statement will only be executed if the \"and\" operators return true.'),l.a.createElement(u.a,null,\"3. \",l.a.createElement(\"b\",null,\"Or\"),' : Similar to the word \"or\" this returns true if either of the conditions are true.'))),l.a.createElement(c.a,{container:!0,spacing:2},l.a.createElement(c.a,{item:!0,sm:7,align:\"center\"},l.a.createElement(\"br\",null),l.a.createElement(\"br\",null),l.a.createElement(\"iframe\",{style:{marginLeft:\"150px\",marginBottom:\"50px\"},align:\"center\",title:\"Learning about input and output in Python\",src:\"https://trinket.io/embed/python/cbfde46f46\",width:\"800\",height:\"500\",sandbox:\"allow-forms allow-modals allow-popups allow-presentation allow-same-origin allow-scripts\"})),l.a.createElement(c.a,{item:!0,sm:5},l.a.createElement(h.a,{width:\"600px\",height:\"600px\",raised:\"true\",style:{width:\"400px\",height:\"400px\",marginRight:\"50px\",marginTop:\"100px\",marginLeft:\"100px\",backgroundColor:\"yellowgreen\"}},l.a.createElement(u.a,null,l.a.createElement(\"b\",null,\"Try yourself!\")),l.a.createElement(u.a,null,\"Now that you have seen an example, it is time for you to apply this knowledge to our creamery!\"),l.a.createElement(u.a,null,\"Print the cost of different types of ice creams according to the ice cream flavor that the user enters. Modify the sandbox on the side with your code and see if you can get the correct output!\")))))};var b=function(){return l.a.createElement(\"div\",null,l.a.createElement(o.a,{color:\"success\"},l.a.createElement(\"h1\",{align:\"center\",color:\"success\"},\"Lesson 3: Let's learn about Lists!\")),l.a.createElement(c.a,{container:!0,spacing:2},l.a.createElement(c.a,{item:!0,sm:4},l.a.createElement(h.a,{style:{marginLeft:\"100px\",width:\"700px\",height:\"325px\",backgroundColor:\"yellowgreen\"},raised:\"true\"},l.a.createElement(u.a,null,l.a.createElement(o.a,null,l.a.createElement(\"b\",null,\"What are Lists and why are they used?\"))),l.a.createElement(o.a,null,l.a.createElement(u.a,null,\"A list is a \",l.a.createElement(\"b\",null,\"mutable\"),\" (can be changed) data structure in Python. A list consists of an ordered \",l.a.createElement(\"b\",null,\"sequence of elements\"),\", each of these elements inside the list is called an \",l.a.createElement(\"b\",null,\"item\"),\". All python lists are framed by an outerset of \",l.a.createElement(\"b\",null,\"square brackets [ ]\"),\". Any data types can be added to a single list.\"),l.a.createElement(u.a,null,\"Lists can become useful when working with \",l.a.createElement(\"b\",null,\"related values and data sets\"),\". Lists are an easy way to keep data organized and perform the same operations on multiple values at once. These operations can be performed using different \",l.a.createElement(\"b\",null,\"list functions\"),\". Examples of these functions are given on the next card.\"))),l.a.createElement(\"br\",null),l.a.createElement(\"br\",null),l.a.createElement(\"iframe\",{align:\"center\",style:{marginLeft:\"100px\"},title:\"Learning about Lists in Python\",src:\"https://trinket.io/embed/python/b6cfff3ab5?toggleCode=true\",width:\"700\",height:\"525\",sandbox:\"allow-forms allow-modals allow-popups allow-presentation allow-same-origin allow-scripts\"})),l.a.createElement(c.a,{item:!0,sm:4}),l.a.createElement(c.a,{item:!0,sm:4},l.a.createElement(h.a,{style:{backgroundColor:\"yellowgreen\",width:\"400px\",height:\"700px\",marginRight:\"100px\"},raised:\"true\"},l.a.createElement(u.a,null,l.a.createElement(o.a,null,l.a.createElement(\"b\",null,\"Important Python List Functions\"))),l.a.createElement(o.a,null,l.a.createElement(u.a,null,l.a.createElement(\"b\",null,\"1. len()\"),\" - Returns the number of items in the List.\"),l.a.createElement(u.a,null,l.a.createElement(\"b\",null,\"2. append()\"),\" - Used for appending and adding elements to the end of the List.\"),l.a.createElement(u.a,null,l.a.createElement(\"b\",null,\"3. remove()\"),\" - Removes a given object from the List.\"),l.a.createElement(u.a,null,l.a.createElement(\"b\",null,\"4. sort()\"),\" - Sort a List in ascending, descending, or user-defined order.\"),l.a.createElement(u.a,null,l.a.createElement(\"b\",null,\"5. count()\"),\" - Returns the number of times an object appears in a List.\"),l.a.createElement(u.a,null,l.a.createElement(\"b\",null,\"6. min() / max()\"),\" - Calculates the minimum or maximum of all the elements of the List\"),l.a.createElement(u.a,null,l.a.createElement(\"b\",null,\"7. sort()\"),\" - Sort a List in ascending, descending, or user-defined order.\"),l.a.createElement(u.a,null,\"Run the code in the sandbox and to see how ice cream flavors can be added to a list that acts as the shopping cart.\"))),l.a.createElement(\"br\",null),l.a.createElement(\"br\",null),l.a.createElement(\"br\",null),l.a.createElement(h.a,{style:{backgroundColor:\"yellowgreen\",width:\"400px\",height:\"100px\",marginRight:\"100px\"},raised:\"true\"},l.a.createElement(o.a,{style:{color:\"black\"}},l.a.createElement(u.a,null,l.a.createElement(\"b\",null,\"Your turn to modify the sandbox!\"),\" - Now try using the \",l.a.createElement(\"b\",null,\"costs list\"),\" to add up the total cost of the shopping cart.\"))))))};var f=function(){return l.a.createElement(\"div\",null,l.a.createElement(o.a,{color:\"success\"},l.a.createElement(\"h1\",{align:\"center\",color:\"success\"},\"Lesson 4: Let's learn about Loops!\")),l.a.createElement(c.a,{container:!0,spacing:2},l.a.createElement(c.a,{item:!0,sm:4},l.a.createElement(h.a,{style:{marginLeft:\"100px\",width:\"700px\",height:\"275px\",backgroundColor:\"yellowgreen\"},raised:\"true\"},l.a.createElement(u.a,null,l.a.createElement(o.a,null,l.a.createElement(\"b\",null,\"What are Loops and why are they used?\"))),l.a.createElement(o.a,null,l.a.createElement(u.a,null,\"A python loop is a sequence of instructions that is \",l.a.createElement(\"b\",null,\"continually repeated\"),\" until a certain condition is reached. There are 2 main types of loops in Python: \",l.a.createElement(\"b\",null,\"For Loops\"),\" and \",l.a.createElement(\"b\",null,\"While Loops\"),\". These are explained more in depth on the next card.\"),l.a.createElement(u.a,null,\"Loops are important because they allow a programmer to execute blocks of code repeatedly without having to write out the same line of code multiple times. An advantage of using loops is that it \",l.a.createElement(\"b\",null,\"increases efficiency\"),\" and allows code to become \",l.a.createElement(\"b\",null,\"more simplified\"),\".\"))),l.a.createElement(\"br\",null),l.a.createElement(\"br\",null),l.a.createElement(\"iframe\",{align:\"center\",style:{marginLeft:\"100px\"},title:\"Learning about Loops in Python\",src:\"https://trinket.io/embed/python/15078468c5?toggleCode=true\",width:\"700\",height:\"500\",sandbox:\"allow-forms allow-modals allow-popups allow-presentation allow-same-origin allow-scripts\"})),l.a.createElement(c.a,{item:!0,sm:4}),l.a.createElement(c.a,{item:!0,sm:4},l.a.createElement(h.a,{style:{backgroundColor:\"yellowgreen\",width:\"400px\",height:\"600px\",marginRight:\"50px\"},raised:\"true\"},l.a.createElement(u.a,null,l.a.createElement(o.a,null,l.a.createElement(\"b\",null,\"Different Types of Loops\"))),l.a.createElement(o.a,null,l.a.createElement(u.a,null,l.a.createElement(\"b\",null,\"For Loops\"),\" - A loop with a control statement that executes code repeatedly for a particular number of iterations. In this control flow statement, the keyword used is \",l.a.createElement(\"b\",null,'\"for\"'),\". The for loop is used when the \",l.a.createElement(\"b\",null,\"number of iterations is already known\"),\".\"),l.a.createElement(u.a,null,l.a.createElement(\"b\",null,\"While Loops\"),\" - A loop that executes a single statement or a group of statements for the given true condition. The keyword used to represent this loop is \",l.a.createElement(\"b\",null,'\"while\"'),\". The while loop is used when the \",l.a.createElement(\"b\",null,\"number of iterations is unknown\"),\".\"),l.a.createElement(u.a,null,l.a.createElement(\"b\",null,\"How do I know which to use? \"),\" - \",l.a.createElement(\"b\",null,\"For loops\"),\" are used when we know the number of iterations we want the loop to complete. \",l.a.createElement(\"b\",null,\"While loops\"),\" are used when we want the loop to continue executing until a specific condition is proved wrong.\"),l.a.createElement(u.a,null,\"Run the code in the sandbox to see how a while loop can be used to print icecream flavors in a list.\"))),l.a.createElement(\"br\",null),l.a.createElement(\"br\",null),l.a.createElement(\"br\",null),l.a.createElement(h.a,{style:{backgroundColor:\"yellowgreen\",width:\"400px\",height:\"110px\",marginRight:\"100px\"},raised:\"true\"},l.a.createElement(o.a,{style:{color:\"black\"}},l.a.createElement(u.a,null,l.a.createElement(\"b\",null,\"Your turn to modify the sandbox!\"),\" - Print out all the ice cream flavors in the list using a \",l.a.createElement(\"b\",null,\"for loop\"),\". The while loop was already done for you.\"))))))};var w=function(){return l.a.createElement(\"div\",null,l.a.createElement(o.a,{color:\"success\"},l.a.createElement(\"h1\",{align:\"center\",color:\"success\"},\"Lesson 5: Let's learn about Functions!\")),l.a.createElement(c.a,{container:!0,spacing:2},l.a.createElement(c.a,{item:!0,sm:4},l.a.createElement(h.a,{style:{marginLeft:\"100px\",width:\"600px\",height:\"500px\",backgroundColor:\"yellowgreen\"}},l.a.createElement(u.a,null,l.a.createElement(\"b\",null,\"What are Functions?\"),l.a.createElement(\"b\",null)),l.a.createElement(u.a,null,\"When coding, it is common to see a repetition of certain parts of code throughout the program. \",l.a.createElement(\"i\",null,\"In general, functions take an inputed value and then output a value, and are meant to perform specified tasks.\")),l.a.createElement(u.a,null,l.a.createElement(\"b\",null,\"What is Function Invocation?\"),l.a.createElement(\"b\",null)),l.a.createElement(u.a,null,\"- Functions are invoked by stating the name of the function followed by parentheses which contain the inputs to the function.\"),l.a.createElement(u.a,null,\"- For functions with multiple inputs, separate them with commas.\"),l.a.createElement(u.a,null,l.a.createElement(\"i\",null,\" For example, a function, called \\u201cIceCreamCost\\u201d that has one input, ice cream flavor, and one output, the cost, would be invoked like this: IceCreamCost(flavor).\")))),l.a.createElement(\"br\",null),l.a.createElement(\"br\",null),l.a.createElement(c.a,{item:!0,sm:4},l.a.createElement(h.a,{style:{marginLeft:\"290px\",width:\"590px\",height:\"500px\",backgroundColor:\"yellowgreen\"}},l.a.createElement(u.a,null,l.a.createElement(\"b\",null,\"Defining vs Calling Function\")),l.a.createElement(u.a,null,\"- Defining a function is done by using the keyword, def following by the function name with the inputs in parenthesis inside.\"),l.a.createElement(u.a,null,\"- Calling a function is done from a separate function and it involves using the function name with the inputs in parenthesis inside.\"),l.a.createElement(u.a,null,l.a.createElement(\"b\",null,\"Arguments vs Parameters\")),l.a.createElement(u.a,null,\"- An argument is the term for a value that is passed into a function via a function invocation.\"),l.a.createElement(u.a,null,\"- A parameter is one of the variables in the actual function definition.\"),l.a.createElement(u.a,null,l.a.createElement(\"b\",null,\"Return vs Print\")),l.a.createElement(u.a,null,\"- Return is a keyword that stops the function from continuing and then \\u201creturns\\u201d the value back to where it was called from.\"),l.a.createElement(u.a,null,\"- Print is a function the prints out the value for humans to see. It will not have to be printed within the function it was called from.\")))),l.a.createElement(c.a,{container:!0,spacing:2},l.a.createElement(c.a,{item:!0,sm:7,align:\"center\"},l.a.createElement(\"br\",null),l.a.createElement(\"br\",null),l.a.createElement(\"iframe\",{style:{marginRight:\"80px\"},title:\"Learning about functions in\",src:\"https://trinket.io/embed/python3/2f76acfe3d\",width:\"750\",height:\"400\",sandbox:\"allow-forms allow-modals allow-popups allow-presentation allow-same-origin allow-scripts\"}),l.a.createElement(\"br\",null),l.a.createElement(\"br\",null)),l.a.createElement(c.a,{item:!0,sm:5},l.a.createElement(h.a,{style:{marginTop:\"100px\",width:\"400px\",height:\"300px\",backgroundColor:\"yellowgreen\"}},l.a.createElement(u.a,null,l.a.createElement(\"b\",null,\"Your turn to try and modify the sandbox!\"),\" Try and alter the different variables and function and see the variety of different outputs!\"),l.a.createElement(u.a,null,l.a.createElement(\"b\",null,\" Practice! \"),\" Now try altering the code by creating a new function that subtracts an amount of ice-cream cones from the store's total supply\"),l.a.createElement(u.a,null,l.a.createElement(\"b\",null,\" Note. This can be done many different ways. Try to experiment and create different variables!\"))))))};var x=function(){return l.a.createElement(\"div\",null,l.a.createElement(o.a,{color:\"success\"},l.a.createElement(\"h1\",{align:\"center\",color:\"success\"},\"Lesson 6: Debugging and Practice Questions!\")),l.a.createElement(c.a,{container:!0,spacing:2},l.a.createElement(c.a,{item:!0,sm:4},l.a.createElement(h.a,{style:{width:\"800px\",height:\"200px\",marginLeft:\"350px\",backgroundColor:\"yellowgreen\"},raised:\"true\"},l.a.createElement(o.a,{align:\"left\",gutterBottom:!0},l.a.createElement(u.a,null,l.a.createElement(\"b\",null,\"What is debugging?\"),l.a.createElement(\"b\",null)),l.a.createElement(u.a,null,\"Debugging is the process of going through code in order to fix errors and bugs. It is an unavoidable part of programming; as a result, it is import to learn techniques and rules to effectively debug your code!\"),l.a.createElement(u.a,null,l.a.createElement(\"b\",null,\"Click on the Practice Problems button to practice this!\"))))),l.a.createElement(c.a,{item:!0,sm:2},l.a.createElement(s.a,{align:\"center\",href:\"/Practice\",variant:\"contained\",color:\"inherit\",label:\"Debugging\",size:\"extralarge\",style:{marginLeft:\"750px\"}},\"Practice Problems!\")),l.a.createElement(c.a,{item:!0,sm:2},l.a.createElement(s.a,{align:\"center\",href:\"/App\",variant:\"contained\",color:\"inherit\",label:\"Debugging\",size:\"extralarge\",style:{marginLeft:\"-650px\"}},\"Homepage\"))),l.a.createElement(\"br\",null),l.a.createElement(\"br\",null),l.a.createElement(c.a,{item:!0,sm:4},l.a.createElement(h.a,{style:{marginLeft:\"350px\",width:\"800px\",height:\"575px\",backgroundColor:\"yellowgreen\"},raised:\"true\"},l.a.createElement(o.a,{align:\"left\",gutterBottom:!0},l.a.createElement(u.a,null,l.a.createElement(\"b\",null,\"What are the steps to debugging?\"),l.a.createElement(\"b\",null)),l.a.createElement(u.a,null,\"Step 1: Identify what the error is. Three of the most common errors include \",l.a.createElement(\"b\",null,\"syntax errors\"),\" (an error in the structure of the code like a missing parenthesis),\",l.a.createElement(\"b\",null,\"semantic errors\"),\" (when the code still runs but returns the wrong output), and \",l.a.createElement(\"b\",null,\"runtime errors\"),\" (an error that occurs when the code is running like when indexing of a list is out of bounds)\"),l.a.createElement(u.a,null,\"Step 2: Find out where the error is. Print statements are useful in figuring out the outputs at different areas of the code, and to help narrow down where the issue is.\"),l.a.createElement(u.a,null,\"Step 3: Look at the error and make a plan on how to fix it.\"),l.a.createElement(u.a,null,\"Step 4: Fix the code.\"),l.a.createElement(u.a,null,\"Step 5: Edit the surrounding code to make sure it wasn't affected by the change of code.\"),l.a.createElement(u.a,null,\"Step 6: Check to see if the code runs properly.\")))),l.a.createElement(\"br\",null),l.a.createElement(\"br\",null))};var y=function(){return l.a.createElement(\"div\",null,l.a.createElement(o.a,{color:\"success\"},l.a.createElement(\"h1\",{align:\"center\",color:\"success\"},\"Edit the Sandbox to Correct the Error!\")),l.a.createElement(c.a,{item:!0,sm:2},l.a.createElement(s.a,{href:\"/Debugging\",variant:\"contained\",color:\"inherit\",label:\"Debugging\",size:\"large\",style:{marginLeft:\"100px\"}},\"Back\"),l.a.createElement(s.a,{href:\"/Problem3\",variant:\"contained\",color:\"inherit\",label:\"Debugging\",size:\"large\",style:{marginLeft:\"450px\"}},\"Continue\"),l.a.createElement(s.a,{href:\"/App\",variant:\"contained\",color:\"inherit\",label:\"Debugging\",size:\"large\",style:{marginLeft:\"450px\"}},\"Homepage\")),l.a.createElement(c.a,{container:!0,spacing:2},l.a.createElement(c.a,{item:!0,sm:7,align:\"center\"},l.a.createElement(\"br\",null),l.a.createElement(\"br\",null),l.a.createElement(\"iframe\",{align:\"center\",style:{marginLeft:\"40px\"},title:\"Learning about functions in\",src:\"https://trinket.io/embed/python3/960679b04a\",width:\"600\",height:\"400\",sandbox:\"allow-forms allow-modals allow-popups allow-presentation allow-same-origin allow-scripts\"})),l.a.createElement(c.a,{item:!0,sm:5},l.a.createElement(h.a,{style:{marginTop:\"75px\",width:\"300px\",height:\"150px\",backgroundColor:\"silver\"}},l.a.createElement(u.a,null,l.a.createElement(\"b\",null,\"Question 1\")),l.a.createElement(u.a,null,\"Print every ice-cream flavor.\")))),l.a.createElement(\"br\",null),l.a.createElement(\"br\",null),l.a.createElement(c.a,{container:!0,spacing:2},l.a.createElement(c.a,{item:!0,sm:7,align:\"center\"},l.a.createElement(\"br\",null),l.a.createElement(\"br\",null),l.a.createElement(\"iframe\",{align:\"center\",style:{marginLeft:\"40px\"},title:\"Learning about functions in\",src:\"https://trinket.io/embed/python3/6771db41f6\",width:\"600\",height:\"400\",sandbox:\"allow-forms allow-modals allow-popups allow-presentation allow-same-origin allow-scripts\"})),l.a.createElement(c.a,{item:!0,sm:5},l.a.createElement(h.a,{style:{marginTop:\"75px\",width:\"300px\",height:\"150px\",backgroundColor:\"silver\"}},l.a.createElement(u.a,null,l.a.createElement(\"b\",null,\"Question 2\")),l.a.createElement(u.a,null,\"Print out the four ice-cream flavors and the costs of each.\")))),l.a.createElement(\"br\",null),l.a.createElement(\"br\",null))};var v=function(){return l.a.createElement(\"div\",null,l.a.createElement(o.a,{color:\"success\"},l.a.createElement(\"h1\",{align:\"center\",color:\"success\"},\"Edit the Sandbox to Correct the Error!\")),l.a.createElement(c.a,{item:!0,sm:2},l.a.createElement(s.a,{href:\"/Practice\",variant:\"contained\",color:\"inherit\",label:\"Debugging\",size:\"large\",style:{marginLeft:\"100px\"}},\"Back\"),l.a.createElement(s.a,{href:\"/Problem5\",variant:\"contained\",color:\"inherit\",label:\"Debugging\",size:\"large\",style:{marginLeft:\"450px\"}},\"Continue\"),l.a.createElement(s.a,{href:\"/App\",variant:\"contained\",color:\"inherit\",label:\"Debugging\",size:\"large\",style:{marginLeft:\"450px\"}},\"Homepage\")),l.a.createElement(c.a,{container:!0,spacing:2},l.a.createElement(c.a,{item:!0,sm:7,align:\"center\"},l.a.createElement(\"br\",null),l.a.createElement(\"br\",null),l.a.createElement(\"iframe\",{align:\"center\",style:{marginLeft:\"40px\"},title:\"Learning about functions in\",src:\"https://trinket.io/embed/python3/2d8507c154\",width:\"600\",height:\"400\",sandbox:\"allow-forms allow-modals allow-popups allow-presentation allow-same-origin allow-scripts\"})),l.a.createElement(c.a,{item:!0,sm:5},l.a.createElement(h.a,{style:{marginTop:\"75px\",width:\"300px\",height:\"150px\",backgroundColor:\"silver\"}},l.a.createElement(u.a,null,l.a.createElement(\"b\",null,\"Question 3\")),l.a.createElement(u.a,null,\"Print the product of num1 and num2.\")))),l.a.createElement(\"br\",null),l.a.createElement(\"br\",null),l.a.createElement(c.a,{container:!0,spacing:2},l.a.createElement(c.a,{item:!0,sm:7,align:\"center\"},l.a.createElement(\"br\",null),l.a.createElement(\"br\",null),l.a.createElement(\"iframe\",{align:\"center\",style:{marginLeft:\"40px\"},title:\"Learning about functions in\",src:\"https://trinket.io/embed/python3/9045f0188d\",width:\"600\",height:\"400\",sandbox:\"allow-forms allow-modals allow-popups allow-presentation allow-same-origin allow-scripts\"})),l.a.createElement(c.a,{item:!0,sm:5},l.a.createElement(h.a,{style:{marginTop:\"75px\",width:\"300px\",height:\"150px\",backgroundColor:\"silver\"}},l.a.createElement(u.a,null,l.a.createElement(\"b\",null,\"Question 4\")),l.a.createElement(u.a,null,\"Print the flavor Vanilla from the list.\")))),l.a.createElement(\"br\",null),l.a.createElement(\"br\",null))};var L=function(){return l.a.createElement(\"div\",null,l.a.createElement(o.a,{color:\"success\"},l.a.createElement(\"h1\",{align:\"center\",color:\"success\"},\"Edit the Sandbox to Correct the Error!\")),l.a.createElement(c.a,{item:!0,sm:2},l.a.createElement(s.a,{href:\"/Problem3\",variant:\"contained\",color:\"inherit\",label:\"Debugging\",size:\"large\",style:{marginLeft:\"100px\"}},\"Back\"),l.a.createElement(s.a,{href:\"/Problem7\",variant:\"contained\",color:\"inherit\",label:\"Debugging\",size:\"large\",style:{marginLeft:\"450px\"}},\"Continue\"),l.a.createElement(s.a,{href:\"/App\",variant:\"contained\",color:\"inherit\",label:\"Debugging\",size:\"large\",style:{marginLeft:\"450px\"}},\"Homepage\")),l.a.createElement(c.a,{container:!0,spacing:2},l.a.createElement(c.a,{item:!0,sm:7,align:\"center\"},l.a.createElement(\"br\",null),l.a.createElement(\"br\",null),l.a.createElement(\"iframe\",{align:\"center\",style:{marginLeft:\"40px\"},title:\"Learning about functions in\",src:\"https://trinket.io/embed/python3/2238659c3e\",width:\"600\",height:\"400\",sandbox:\"allow-forms allow-modals allow-popups allow-presentation allow-same-origin allow-scripts\"})),l.a.createElement(c.a,{item:!0,sm:5},l.a.createElement(h.a,{style:{marginTop:\"75px\",width:\"300px\",height:\"150px\",backgroundColor:\"silver\"}},l.a.createElement(u.a,null,l.a.createElement(\"b\",null,\"Question 5\")),l.a.createElement(u.a,null,\"Print the multiples of 2 up until 5.\")))),l.a.createElement(\"br\",null),l.a.createElement(\"br\",null),l.a.createElement(c.a,{container:!0,spacing:2},l.a.createElement(c.a,{item:!0,sm:7,align:\"center\"},l.a.createElement(\"br\",null),l.a.createElement(\"br\",null),l.a.createElement(\"iframe\",{align:\"center\",style:{marginLeft:\"40px\"},title:\"Learning about functions in\",src:\"https://trinket.io/embed/python3/a8fd3ed873\",width:\"600\",height:\"400\",sandbox:\"allow-forms allow-modals allow-popups allow-presentation allow-same-origin allow-scripts\"})),l.a.createElement(c.a,{item:!0,sm:5},l.a.createElement(h.a,{style:{marginTop:\"75px\",width:\"300px\",height:\"150px\",backgroundColor:\"silver\"}},l.a.createElement(u.a,null,l.a.createElement(\"b\",null,\"Question 6\")),l.a.createElement(u.a,null,\"Print the amount of cones left in a stock after a cone is bought.\")))),l.a.createElement(\"br\",null),l.a.createElement(\"br\",null))};var k=function(){return l.a.createElement(\"div\",null,l.a.createElement(o.a,{color:\"success\"},l.a.createElement(\"h1\",{align:\"center\",color:\"success\"},\"Edit the Sandbox to Correct the Error!\")),l.a.createElement(c.a,{item:!0,sm:2},l.a.createElement(s.a,{href:\"/Problem5\",variant:\"contained\",color:\"inherit\",label:\"Debugging\",size:\"large\",style:{marginLeft:\"100px\"}},\"Back\"),l.a.createElement(s.a,{href:\"/Problem9\",variant:\"contained\",color:\"inherit\",label:\"Debugging\",size:\"large\",style:{marginLeft:\"450px\"}},\"Continue\"),l.a.createElement(s.a,{href:\"/App\",variant:\"contained\",color:\"inherit\",label:\"Debugging\",size:\"large\",style:{marginLeft:\"450px\"}},\"Homepage\")),l.a.createElement(c.a,{container:!0,spacing:2},l.a.createElement(c.a,{item:!0,sm:7,align:\"center\"},l.a.createElement(\"br\",null),l.a.createElement(\"br\",null),l.a.createElement(\"iframe\",{align:\"center\",style:{marginLeft:\"40px\"},title:\"Learning about functions in\",src:\"https://trinket.io/embed/python3/9576c6b4e3\",width:\"600\",height:\"400\",sandbox:\"allow-forms allow-modals allow-popups allow-presentation allow-same-origin allow-scripts\"})),l.a.createElement(c.a,{item:!0,sm:5},l.a.createElement(h.a,{style:{marginTop:\"75px\",width:\"300px\",height:\"150px\",backgroundColor:\"silver\"}},l.a.createElement(u.a,null,l.a.createElement(\"b\",null,\"Question 7\")),l.a.createElement(u.a,null,\"Print the average of x and y.\")))),l.a.createElement(\"br\",null),l.a.createElement(\"br\",null),l.a.createElement(c.a,{container:!0,spacing:2},l.a.createElement(c.a,{item:!0,sm:7,align:\"center\"},l.a.createElement(\"br\",null),l.a.createElement(\"br\",null),l.a.createElement(\"iframe\",{align:\"center\",style:{marginLeft:\"40px\"},title:\"Learning about functions in\",src:\"https://trinket.io/embed/python3/4fe4821b62\",width:\"600\",height:\"400\",sandbox:\"allow-forms allow-modals allow-popups allow-presentation allow-same-origin allow-scripts\"})),l.a.createElement(c.a,{item:!0,sm:5},l.a.createElement(h.a,{style:{marginTop:\"75px\",width:\"300px\",height:\"150px\",backgroundColor:\"silver\"}},l.a.createElement(u.a,null,l.a.createElement(\"b\",null,\"Question 8\")),l.a.createElement(u.a,null,\"Print the numbers from count to 0.\")))),l.a.createElement(\"br\",null),l.a.createElement(\"br\",null))};var C=function(){return l.a.createElement(\"div\",null,l.a.createElement(o.a,{color:\"success\"},l.a.createElement(\"h1\",{align:\"center\",color:\"success\"},\"Edit the Sandbox to Correct the Error!\")),l.a.createElement(c.a,{item:!0,sm:2},l.a.createElement(s.a,{href:\"/Problem7\",variant:\"contained\",color:\"inherit\",label:\"Debugging\",size:\"large\",style:{marginLeft:\"100px\"}},\"Back\"),l.a.createElement(s.a,{href:\"/App\",variant:\"contained\",color:\"inherit\",label:\"Debugging\",size:\"large\",style:{marginLeft:\"450px\"}},\"Homepage\")),l.a.createElement(c.a,{container:!0,spacing:2},l.a.createElement(c.a,{item:!0,sm:7,align:\"center\"},l.a.createElement(\"br\",null),l.a.createElement(\"br\",null),l.a.createElement(\"iframe\",{align:\"center\",style:{marginLeft:\"40px\"},title:\"Learning about functions in\",src:\"https://trinket.io/embed/python3/baa6659fa3\",width:\"600\",height:\"400\",sandbox:\"allow-forms allow-modals allow-popups allow-presentation allow-same-origin allow-scripts\"})),l.a.createElement(c.a,{item:!0,sm:5},l.a.createElement(h.a,{style:{marginTop:\"75px\",width:\"300px\",height:\"150px\",backgroundColor:\"silver\"}},l.a.createElement(u.a,null,l.a.createElement(\"b\",null,\"Question 9\")),l.a.createElement(u.a,null,\"Print the product of all real numbers till 10.\")))),l.a.createElement(\"br\",null),l.a.createElement(\"br\",null),l.a.createElement(c.a,{container:!0,spacing:2},l.a.createElement(c.a,{item:!0,sm:7,align:\"center\"},l.a.createElement(\"br\",null),l.a.createElement(\"br\",null),l.a.createElement(\"iframe\",{align:\"center\",style:{marginLeft:\"40px\"},title:\"Learning about functions in\",src:\"https://trinket.io/embed/python3/a6a3f860d3\",width:\"600\",height:\"400\",sandbox:\"allow-forms allow-modals allow-popups allow-presentation allow-same-origin allow-scripts\"})),l.a.createElement(c.a,{item:!0,sm:5},l.a.createElement(h.a,{style:{marginTop:\"75px\",width:\"300px\",height:\"150px\",backgroundColor:\"silver\"}},l.a.createElement(u.a,null,l.a.createElement(\"b\",null,\"Question 10 (Bonus!)\")),l.a.createElement(u.a,null,\"Return true if the sum of num three times is 0.3.\")))),l.a.createElement(\"br\",null),l.a.createElement(\"br\",null))},T=Object(E.a)([{path:\"/\",element:l.a.createElement(m,null)},{path:\"/Input\",element:l.a.createElement(p,null)},{path:\"/Conditionals\",element:l.a.createElement(d,null)},{path:\"/Lists\",element:l.a.createElement(b,null)},{path:\"/Loops\",element:l.a.createElement(f,null)},{path:\"/Functions\",element:l.a.createElement(w,null)},{path:\"Debugging\",element:l.a.createElement(x,null)},{path:\"Practice\",element:l.a.createElement(y,null)},{path:\"Problem3\",element:l.a.createElement(v,null)},{path:\"Problem5\",element:l.a.createElement(L,null)},{path:\"Problem7\",element:l.a.createElement(k,null)},{path:\"Problem9\",element:l.a.createElement(C,null)},{path:\"App\",element:l.a.createElement(m,null)}]);i.a.createRoot(document.getElementById(\"root\")).render(l.a.createElement(g.b,{router:T}))}},[[56,2,1]]]);","extractedComments":[]}
{"ast":null,"code":"var _jsxFileName = \"/Users/suvarna/Desktop/WepoPythonTutorial/src/Input.js\";\nimport React from 'react';\nimport { Typography, Grid, CardContent, CardActionArea } from '@mui/material';\nimport { Card } from '@mui/material';\nfunction Input() {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    color: \"success\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    align: \"center\",\n    color: \"success\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 17\n    }\n  }, \"Variables, Data Types, Comments, Input and Output\")), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    sm: 8,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"iframe\", {\n    align: \"center\",\n    title: \"Learning about input and output in Python\",\n    src: \"https://trinket.io/embed/python3/860e806044\",\n    width: \"600\",\n    height: \"400\",\n    sandbox: \"allow-forms allow-modals allow-popups allow-presentation allow-same-origin allow-scripts\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    sm: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    style: {\n      backgroundColor: \"yellowgreen\",\n      width: \"400px\",\n      height: \"500px\",\n      marginRight: \"60px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(CardContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 25\n    }\n  }, \"Different types of data types:\")), /*#__PURE__*/React.createElement(Typography, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(CardContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 25\n    }\n  }, \"1. Integer - Non decimal numerical values are categorized as \\\"int\\\". For example, 1, 2, 3..\"), /*#__PURE__*/React.createElement(CardContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 25\n    }\n  }, \"2. Float - These are the numeric decimal values. For example, 2.3, 7.8, 4.0\"), /*#__PURE__*/React.createElement(CardContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 25\n    }\n  }, \"3. String - Anything having \\\" \\\" around it can be categorized as a string value. For example, \\\"name\\\", \\\"apple\\\", \\\"4\\\"\"), /*#__PURE__*/React.createElement(CardContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 25\n    }\n  }, \"4. Boolean - This can have only two values - true of false. Used as a check for different properties. For example, if an object has a property that is present, the value of the property will be \", /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 223\n    }\n  }, \"true\"), \", otherwise it will be \", /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 257\n    }\n  }, \"false\")))))));\n}\nexport default Input;","map":{"version":3,"names":["React","Typography","Grid","CardContent","CardActionArea","Card","Input","createElement","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","color","align","container","spacing","item","sm","title","src","width","height","sandbox","style","backgroundColor","marginRight"],"sources":["/Users/suvarna/Desktop/WepoPythonTutorial/src/Input.js"],"sourcesContent":["import React from 'react'\nimport { Typography, Grid, CardContent, CardActionArea } from '@mui/material'\nimport { Card } from '@mui/material'\n\nfunction Input(){\n    return(\n        <div>\n            <Typography color=\"success\">\n                <h1 align=\"center\" color='success'>Variables, Data Types, Comments, Input and Output</h1>\n             </Typography>\n            <Grid container spacing={2}>\n                <Grid item sm ={8}>\n            <iframe align=\"center\"  title='Learning about input and output in Python' src=\"https://trinket.io/embed/python3/860e806044\"  width=\"600\" height=\"400\" sandbox=\"allow-forms allow-modals allow-popups allow-presentation allow-same-origin allow-scripts\"/>\n            </Grid>\n            <Grid item sm={4}>\n                <Card style={{backgroundColor:\"yellowgreen\", width:\"400px\", height:\"500px\", marginRight:\"60px\"}}>\n                    <CardContent>\n                        <Typography>\n                            Different types of data types:\n                        </Typography>\n                    </CardContent>\n                    <Typography>\n                        <CardContent>\n                            1. Integer - Non decimal numerical values are categorized as \"int\". For example, 1, 2, 3.. \n                        </CardContent>\n                        <CardContent>\n                            2. Float - These are the numeric decimal values. For example, 2.3, 7.8, 4.0\n                        </CardContent>\n                        <CardContent>\n                            3. String - Anything having \" \" around it can be categorized as a string value. For example, \"name\", \"apple\", \"4\"\n                        </CardContent>\n                        <CardContent>\n                            4. Boolean - This can have only two values - true of false. Used as a check for different properties. For example, if an object has a property that is present, the value of the property will be <b>true</b>, otherwise it will be <b>false</b>\n                        </CardContent>\n                    </Typography>\n                </Card>\n                </Grid>\n            </Grid>\n        </div>\n)\n}\nexport default Input"],"mappings":"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"},"metadata":{},"sourceType":"module"}